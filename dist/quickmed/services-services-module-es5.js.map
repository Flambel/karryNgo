{"version":3,"sources":["webpack:///src/app/layout/services/manageservices.component.ts","webpack:///src/app/layout/services/manageservices.component.html","webpack:///src/app/layout/services/services-routing.module.ts","webpack:///src/app/layout/services/services.component.ts","webpack:///src/app/layout/services/services.component.html","webpack:///src/app/layout/services/services.module.ts"],"names":["ManageservicesComponent","formBuilder","router","alertService","SetServiceFunc","empformlabel","empformbtn","submitted","btnvisibility","routeReuseStrategy","shouldReuseRoute","getAll","pipe","subscribe","serv_cats","categories","addForm","group","_id","serviceName","required","categoryServiceId","description","data_id","localStorage","getItem","getByIdServicesDBM","dataget","patchValue","data","invalid","saveServicesDBM","value","success","message","error","navigate","updateServicesDBM","controls","onCancel","selector","templateUrl","styleUrls","animations","routes","path","component","children","ServicesRoutingModule","forChild","imports","exports","ServicesComponent","askServiceService","route","services_data","loadAllServicesDatas","serv","console","log","idCategory","TabCat","verified","i","VarName","length","String","categoryName","removeItem","dataValue","setItem","toString","id","deleteServicesDBM","ServicesModule","declarations"],"mappings":"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","file":"services-services-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";  \r\nimport { Router } from \"@angular/router\";  \r\n\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\n\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { ServiceCatService } from './../../_services/services-categories.service';\r\n\r\n@Component({\r\n  selector: 'app-manageservices',\r\n  templateUrl: './manageservices.component.html',\r\n  styleUrls: ['./manageservices.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\n\r\nexport class ManageservicesComponent implements OnInit {\r\n\r\n  empformlabel: string = 'Add Service';  \r\n  empformbtn: string = 'Save';  \r\n  submitted = false;\r\n  categories: any;\r\n\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private alertService: AlertService,private SetServiceFunc: ServiceCatService) { \r\n\r\n   // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      }; \r\n  }\r\n\r\n\r\n  addForm: FormGroup;  \r\n  btnvisibility: boolean = true;  \r\n\r\n  ngOnInit() {\r\n\r\n  this.SetServiceFunc.getAll().pipe(first()).subscribe(serv_cats => { \r\n            this.categories = serv_cats;\r\n        });\r\n   \r\n\r\n\r\n  \tthis.addForm = this.formBuilder.group({   \r\n      _id: [''],   \r\n      serviceName: ['', Validators.required],       \r\n      categoryServiceId: ['', Validators.required],       \r\n      description: ['', Validators.required]       \r\n    });   \r\n\r\n    let data_id = localStorage.getItem('editDataService');\r\n\r\n    if (data_id) {  \r\n     \r\n     this.SetServiceFunc.getByIdServicesDBM(data_id).pipe(first()).subscribe( (dataget : any)  => {  \r\n          //this.addForm.patchValue(dataget.data); \r\n\r\n          this.addForm.patchValue({\r\n          _id: dataget.data._id,serviceName: dataget.data.serviceName,\r\n          categoryServiceId: dataget.data.categoryServiceId,description: dataget.data.description\r\n          }); \r\n     \r\n        });\r\n\r\n      this.btnvisibility = false;  \r\n      this.empformlabel = 'Edit Service';  \r\n      this.empformbtn = 'Update';  \r\n    } \r\n      \r\n\r\n  }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.addForm.controls; }\r\n\r\n    onSubmit() { \r\n\r\n       this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        }\r\n\r\n    this.SetServiceFunc.saveServicesDBM(this.addForm.value)  \r\n      .subscribe(\r\n       //on success \r\n       (data : any) => { \r\n            this.alertService.success(data.message, true);\r\n       },\r\n       //on error\r\n       error => {\r\n            this.alertService.error(error);\r\n       },\r\n        //on complete\r\n       () => { \r\n            this.router.navigate(['/portal/services']);  \r\n       });\r\n\r\n    }\r\n\r\n    onUpdate() { \r\n\r\n    this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        } \r\n\r\n      this.SetServiceFunc.updateServicesDBM(this.addForm.value).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n              this.router.navigate(['/portal/services']); \r\n           }); \r\n\r\n  } \r\n\r\n    onCancel() { this.router.navigate(['/portal/services']); } \r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <app-page-header [heading]=\"'Services'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                \t <h2 class=\"text-center\">{{empformlabel}}</h2>  \r\n           \t\t\t\t<alert></alert>\r\n                </div>\r\n\r\n                <div class=\"col-md-10\">  \r\n      <form [formGroup]=\"addForm\" novalidate class=\"form\">\r\n\r\n    <input  name=\"id\" type=\"hidden\" formControlName=\"_id\" >  \r\n\r\n<div class=\"row\">\r\n\r\n     <div class=\"form-group col-md-6\">  \r\n        <label for=\"service_name\">Service Name</label>  \r\n        <input formControlName=\"serviceName\" placeholder=\"Service Name\" class=\"form-control\" id=\"service_name\" [ngClass]=\"{ 'is-invalid': submitted && f.serviceName.errors }\">  \r\n        <div *ngIf=\"submitted && f.serviceName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.serviceName.errors.required\">Service Name is required</div>\r\n        </div>\r\n     </div> \r\n\r\n     <div class=\"form-group col-md-6\">  \r\n        <label for=\"cat\">Choose Your Category</label>  \r\n          <select class=\"form-control\" *ngIf=\"categories && categories.data\" formControlName=\"categoryServiceId\" name=\"cat\" id=\"cat\" >\r\n            <option [value]=\"\"></option>\r\n            <option *ngFor=\"let val of categories.data\" [value]=\"val._id\">{{val.categoryName}}</option>\r\n          </select> \r\n        <div *ngIf=\"submitted && f.categoryServiceId.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.categoryServiceId.errors.required\">Category is required</div>\r\n        </div>\r\n     </div> \r\n\r\n</div>\r\n\r\n<div class=\"row\">\r\n     <div class=\"form-group col-md-10\">  \r\n        <label for=\"description\">Description</label>\r\n        <textarea formControlName=\"description\" placeholder=\"Enter Your Description\" class=\"form-control\" id=\"description\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" ></textarea>    \r\n        <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n        </div>\r\n     </div> \r\n</div>\r\n  \r\n\r\n\t\r\n\r\n     \r\n\r\n<div class=\"row\">\r\n    <div class=\"form-group col-md-12 text-center\">\r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"btnvisibility\" (click)=\"onSubmit()\">Save</button>   \r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"!btnvisibility\" (click)=\"onUpdate()\">Update</button> \r\n        <button class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button> \r\n    </div>\r\n</div>\r\n      \r\n        <!-- <p>Form value: {{ addForm.value | json }}</p>   -->\r\n\r\n      </form>  \r\n    </div>  \r\n   \r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n    \r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ServicesComponent } from './services.component';\r\nimport { ManageservicesComponent } from './manageservices.component';\r\n\r\nconst routes: Routes = [\r\n\r\n\t{\r\n\t    path: '',component: ServicesComponent,children:  \r\n\t\t[\r\n\t\t\t{path: 'manage-services', component: ManageservicesComponent}\r\n\t\t]\r\n\t} \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ServicesRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { ServiceCat } from './../../_models/service-categories';\r\nimport { ServiceData } from './../../_models/services';\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { ServiceCatService } from './../../_services/services-categories.service';\r\nimport { AskServiceService } from 'src/app/_services/ask-service.service';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class ServicesComponent implements OnInit {\r\n\r\n  services_data: ServiceData[] = [];\r\n  categories: ServiceCat[] = [];\r\n\r\n  constructor(private askServiceService: AskServiceService, private SetServiceFunc: ServiceCatService,private alertService: AlertService,public route: ActivatedRoute,\r\n        private router: Router) {\r\n\r\n        // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      };\r\n\r\n    }\r\n\r\n ngOnInit() {\r\n\r\n  \t\t\tthis.loadAllServicesDatas();\r\n  }\r\n\r\n  private loadAllServicesDatas() {\r\n\r\n\r\n        this.askServiceService.getAll().pipe(first()).subscribe((serv: any) => { \r\n            this.services_data = serv.data; \r\n            console.log(this.services_data)\r\n        });\r\n     \r\n     this.SetServiceFunc.getAll().pipe(first()).subscribe((serv_cats: any) => { \r\n            this.categories = serv_cats.data; \r\n        });\r\n\r\n    }\r\n\r\n      getCategoryName(idCategory:string,TabCat:any): string {\r\n\r\n              let verified:boolean = false, i=0;\r\n              let VarName=\"\";\r\n              if (idCategory && TabCat) {\r\n                 while (!verified && i < TabCat.length ) {\r\n\r\n                if ( String(TabCat[i]._id) == idCategory){\r\n                    VarName=TabCat[i].categoryName;\r\n                    verified=true;\r\n                  }\r\n\r\n                  i++;\r\n                }\r\n\r\n              } \r\n\r\n           return VarName;\r\n    }\r\n\r\n     add(): void { \r\n      localStorage.removeItem('editDataService'); \r\n      this.router.navigate(['/portal/services/manage-services']);  \r\n   }\r\n\r\n   edit(dataValue: ServiceData): void {      \r\n      localStorage.removeItem('editDataService');  \r\n      localStorage.setItem('editDataService',dataValue.toString()); \r\n      this.router.navigate(['/portal/services/manage-services']);  \r\n\r\n   }\r\n\r\n   delete(id: number) {\r\n        this.SetServiceFunc.deleteServicesDBM(id).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n                this.loadAllServicesDatas() \r\n           });\r\n    }\r\n\r\n\r\n\r\n        //getCategoryName(idCategory:string): Promise<any>{\r\n          //return new Promise ((reject,resolve)=> {\r\n           // this.SetServiceFunc.getAll().pipe(first()).subscribe(serv_cats => { \r\n            //  let tab:any = serv_cats;                  \r\n              //  let resultat= null;\r\n               // for(let i=0; i < tab.data.length; i++ ){\r\n                //  if (tab.data[i]._id == idCategory){\r\n               //     let resultat=tab.data[i].categoryName;\r\n               //   }\r\n               // }\r\n                //resultat ? resolve(resultat):reject(resultat);\r\n             //});\r\n          //});\r\n          //}  \r\n          // getCategoryName(value01).then( (data)=>{ \r\n           //    this.val=        \r\n          // }).catch ( error=>{         \r\n           //     this.val= \r\n           //})\r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <router-outlet></router-outlet>\r\n <div *ngIf=\"route.children.length === 0\">\r\n    <app-page-header [heading]=\"'Services'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                    <alert></alert>\r\n                    Services : {{services_data?.length}}\r\n<!--                     <li *ngFor=\"let obj of categories.data\">{{obj | json}}</li> -->\r\n                    <button style=\"text-align: right\" (click)=\"add()\" class=\"btn btn-success\"> Add</button>                 \r\n                </div>\r\n                <div class=\"card-body table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                        <tr> \r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Service Category</th>\r\n                            <th>Modified On </th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let val of services_data;let rank = index; \" >\r\n                                <td scope=\"row\">{{rank+1}} </td>\r\n                                <td style=\"color: green;font-weight: bold\">{{val.serviceName}}</td>\r\n                                <td style=\"color: green;font-weight: bold\">{{val.description}}</td>\r\n                                <td  style=\"color: blue;font-weight: bold\">{{ getCategoryName(val.categoryServiceId,categories) }}  </td>\r\n                                <td style=\"color: blue;font-weight: bold\"> {{val.create_date | date}}</td>\r\n                                <td> <button (click)=\"edit(val._id)\" style=\"margin-right: 20px;\" class=\"btn btn-info\"> Edit</button>  <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(val._id)\"  >Delete</button></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule,FormsModule  }    from '@angular/forms';\r\n\r\nimport { ServicesRoutingModule } from './services-routing.module';\r\nimport { ServicesComponent } from './services.component';\r\nimport { ManageservicesComponent } from './manageservices.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { AlertModule } from './../../_directives/alert.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ServicesRoutingModule,\r\n    PageHeaderModule,AlertModule,\r\n    ReactiveFormsModule,FormsModule\r\n  ],\r\n  declarations: [ServicesComponent,ManageservicesComponent]\r\n})\r\nexport class ServicesModule { }\r\n"]}