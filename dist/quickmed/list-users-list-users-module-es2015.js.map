{"version":3,"sources":["./src/app/layout/list-users/add-users.component.ts","./src/app/layout/list-users/add-users.component.html","./src/app/layout/list-users/change-role-users.component.ts","./src/app/layout/list-users/change-role-users.component.html","./src/app/layout/list-users/list-users-routing.module.ts","./src/app/layout/list-users/list-users.component.ts","./src/app/layout/list-users/list-users.component.html","./src/app/layout/list-users/list-users.module.ts"],"names":[],"mappings":"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","file":"list-users-list-users-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';  \r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";  \r\nimport { Router } from \"@angular/router\";  \r\n\r\n\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { UserService } from './../../_services/user.service';\r\nimport { AlertService } from './../../_services/alert.service';\r\n  \r\n@Component({  \r\n  selector: 'app-add-emp',  \r\n  templateUrl: './add-users.component.html',  \r\n  styleUrls: ['./add-users.component.scss'],\r\n  animations: [routerTransition()]  \r\n})  \r\nexport class AddEmpComponent implements OnInit {  \r\n  \r\n\r\n  empformlabel: string = 'Add User';  \r\n  empformbtn: string = 'Save';  \r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private alertService: AlertService,private userService: UserService) { \r\n\r\n      // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      }; \r\n  }  \r\n  \r\n  addForm: FormGroup;  \r\n  btnvisibility: boolean = true;  \r\n\r\n  countries = [{'id':'cameroon', 'name':'Cameroon'}, {'id':'south africa', 'name': 'South Africa'}, {'id':'great britain', 'name': 'UK'}, {'id':'usa', 'name': 'USA'}, {'id':'france', 'name': 'France'}];\r\n\r\n  ngOnInit() {  \r\n  \r\n    this.addForm = this.formBuilder.group({   \r\n      _id: [''],  \r\n      username: ['', Validators.required],  \r\n      gender: ['female', Validators.required],  \r\n      country: ['france', Validators.required],  \r\n      email: ['', [Validators.required, Validators.email]],  \r\n      phone: ['', [Validators.required, Validators.minLength(9),Validators.maxLength(9)]]  \r\n    });  \r\n\r\n      let empid = localStorage.getItem('editEmpId'); \r\n\r\n      if (empid) {  \r\n       \r\n       this.userService.getById(empid).pipe(first()).subscribe( (dataget : any)  => {  \r\n            this.addForm.patchValue(dataget.data); \r\n          });\r\n\r\n        this.btnvisibility = false;  \r\n        this.empformlabel = 'Edit User Infos';  \r\n        this.empformbtn = 'Update';  \r\n      }  \r\n \r\n  }  \r\n\r\n\r\n  onSubmit() {  \r\n    console.log('Create fire');  \r\n    //this.empService.createUser(this.addForm.value)  \r\n     // .subscribe(data => {  \r\n        //this.router.navigate(['/portal/list-emp']);  \r\n    //  },  \r\n     // error => {  \r\n     //   alert(error);  \r\n     // });  \r\n  }  \r\n\r\n  onCancel() { \r\n\r\n    this.router.navigate(['/portal/list-users']);\r\n  \r\n  }  \r\n\r\n  onUpdate() {  \r\n    \r\n    console.log('Update fire'); \r\n\r\n      this.userService.update(this.addForm.value).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n                this.router.navigate(['/portal/list-users']); \r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                console.log(error);\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n              //this.router.navigate(['/portal/list-users']); \r\n           }); \r\n\r\n  }  \r\n\r\n}","<div [@routerTransition]>\r\n    <app-page-header [heading]=\"'Edit'\" [icon]=\"'fa-users'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                \t <h2 class=\"text-center\">{{empformlabel}}</h2>  \r\n           \t\t\t\t<alert></alert>\r\n                </div>\r\n\r\n                <div class=\"col-md-10\">  \r\n      <form [formGroup]=\"addForm\" novalidate class=\"form\">    \r\n      \t\r\n      \t <input  name=\"_id\" type=\"hidden\" formControlName=\"_id\" >  \r\n        <div class=\"form-group\">  \r\n          <label for=\"USERNAME\">User Name:</label>  \r\n          <input formControlName=\"username\" placeholder=\"User Name\" name=\"USERNAME\" class=\"form-control\" id=\"USERNAME\">  \r\n          <div class=\"alert  alert-danger\" *ngIf=\"addForm.get('username').touched && addForm.get('username').hasError('required')\">  \r\n            User Name is required  \r\n          </div>  \r\n        </div>  \r\n      \r\n        <div class=\"form-group\">  \r\n          <label for=\"EMAIL\">Email:</label>  \r\n          <input formControlName=\"email\" placeholder=\"Email\" name=\"EMAIL\" class=\"form-control\" id=\"EMAIL\">  \r\n          <div class=\"alert  alert-danger\" *ngIf=\"addForm.get('email').hasError('email') && addForm.get('email').touched\">\r\n            Email is required and must be a valid email address.  \r\n          </div>  \r\n        </div>  \r\n\r\n        <div class=\"form-group\">  \r\n          <label for=\"TELEPHONE\">Phone:</label>  \r\n          <input formControlName=\"phone\" placeholder=\"Telephone Number\" name=\"TELEPHONE\" class=\"form-control\" id=\"TELEPHONE\">  \r\n          <div class=\"alert  alert-danger\" *ngIf=\"addForm.get('phone').hasError('maxlength') && addForm.get('phone').touched\">\r\n            Phone is required and should be equal to 9 digits.  \r\n          </div>  \r\n        </div>  \r\n      \r\n        <div class=\"form-group\">  \r\n          <label for=\"PAYS\">Country:</label>  \r\n\t        <select class=\"form-control\" formControlName=\"country\" name=\"PAYS\" id=\"PAYS\" >\r\n\t\t        <option [value]=\"\"></option>\r\n\t\t        <option *ngFor=\"let pays of countries\" [value]=\"pays.id\">{{pays.name}}</option>\r\n\t        </select>  \r\n          <div class=\"alert  alert-danger\" *ngIf=\"addForm.get('country').hasError('required') && addForm.get('country').touched || addForm.get('country').hasError('required') \">  \r\n            Country is required \r\n          </div> \r\n        </div> \r\n\r\n        <div class=\"row\">\r\n    <div class=\"form-group\">\r\n         <div class=\"radio\">\r\n            <label class=\"custom-control custom-radio\">\r\n                <input type=\"radio\" class=\"custom-control-input\"  name=\"gender\" formControlName=\"gender\" value=\"male\"><span class=\"custom-control-label\">Male</span>\r\n            </label>\r\n         </div>\r\n         <div class=\"radio\">\r\n            <label class=\"custom-control custom-radio\">\r\n                <input type=\"radio\" class=\"custom-control-input\" name=\"gender\" formControlName=\"gender\" value=\"female\"><span class=\"custom-control-label\">Female</span>\r\n            </label>\r\n        </div>\r\n    </div>\r\n</div>        \r\n\r\n<div class=\"row\">\r\n    <div class=\"form-group\">\r\n        <button class=\"btn btn-success mr-4\" [disabled]='addForm.invalid' *ngIf=\"btnvisibility\" (click)=\"onSubmit()\">Save</button>   \r\n        <button class=\"btn btn-success mr-4\" [disabled]='addForm.invalid' *ngIf=\"!btnvisibility\" (click)=\"onUpdate()\">Update</button> \r\n        <button class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button> \r\n    </div>\r\n</div>\r\n\r\n         \r\n      \r\n        <!-- <p>Form value: {{ addForm.value | json }}</p>   -->\r\n      </form>  \r\n    </div>  \r\n   \r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n    \r\n","import { Component, OnInit } from '@angular/core';  \r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";  \r\nimport { Router } from \"@angular/router\";  \r\n\r\n\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { UserService } from './../../_services/user.service';\r\nimport { RoleService } from './../../_services/role.service';\r\n  \r\n@Component({  \r\n  selector: 'app-add-emp',  \r\n  templateUrl: './change-role-users.component.html',  \r\n  styleUrls: ['./change-role-users.component.scss'],\r\n  animations: [routerTransition()]  \r\n})  \r\nexport class ChangeRoleUserComponent implements OnInit {  \r\n  \r\n\r\n  empformlabel: string ;  \r\n  empformbtn: string ;  \r\n  role_data: any;\r\n  userData:any;\r\n\r\n  constructor(private SetServiceRole: RoleService,private formBuilder: FormBuilder, private router: Router, private alertService: AlertService,private userService: UserService) { \r\n\r\n      // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      }; \r\n  }  \r\n  \r\n  addForm: FormGroup;  \r\n  btnvisibility: boolean = true;  \r\n  submitted = false;\r\n\r\n  ngOnInit() {  \r\n\r\n    this.SetServiceRole.getAll().pipe(first()).subscribe(roles => { \r\n            this.role_data = roles; \r\n        }); \r\n\r\n      this.addForm = this.formBuilder.group({        \r\n      role_id: ['', Validators.required],      \r\n      _id: ['']       \r\n    });\r\n\r\n      let empid = localStorage.getItem('editEmpId'); \r\n\r\n      if (empid) {  \r\n       \r\n       this.userService.getById(empid).pipe(first()).subscribe( (dataget : any)  => {  \r\n            this.addForm.patchValue( {_id: dataget.data._id}); \r\n            this.userData=dataget;\r\n\r\n          });\r\n\r\n        this.btnvisibility = false;  \r\n        this.empformlabel = 'Edit User Role';  \r\n        this.empformbtn = 'Update';  \r\n      }  \r\n \r\n  }  \r\n\r\n// convenience getter for easy access to form fields\r\n    get f() { return this.addForm.controls; }\r\n\r\n  onCancel() { \r\n\r\n    this.router.navigate(['/portal/list-users']);\r\n  \r\n  }  \r\n\r\n  onUpdate() {  \r\n\r\n        this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        } \r\n        let formulaire: any = {\r\n          user_id: localStorage.getItem('editEmpId'),\r\n          role_id: this.f.role_id.value\r\n        };\r\n        console.log(' user_id'   +formulaire.user_id);\r\n        console.log(' role_id'   +formulaire.role_id);\r\nconsole.log(this.addForm.value);\r\n      this.SetServiceRole.editRole(formulaire).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n                this.router.navigate(['/portal/list-users']); \r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                console.log(error);\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n              //this.router.navigate(['/portal/list-users']); \r\n           }); \r\n\r\n  }  \r\n\r\n}","<div [@routerTransition]>\r\n    <app-page-header [heading]=\"'Role Edit'\" [icon]=\"'fa-users'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                \t <h2 class=\"text-center\">{{empformlabel}}</h2>  \r\n           \t\t\t\t<alert></alert>\r\n                </div>\r\n\r\n                <div class=\"col-md-10\">  \r\n      <form [formGroup]=\"addForm\" novalidate class=\"form\">    \r\n      \t\r\n      \t<input  name=\"_id\" type=\"hidden\" formControlName=\"_id\" >  \r\n\r\n        <div class=\"form-group\">  \r\n          <label for=\"USERNAME\">Current User Role: <span *ngIf=\"userData.data\" style=\"font-size: blue;font-weight: bold\">{{ userData.data.username }}</span></label>  \r\n          <p *ngIf=\"userData.data\" style=\"font-size: green;font-weight: bold\">{{ userData.data.title_role }} ({{ userData.data.slug_role }})</p>\r\n        </div>  \r\n      \r\n      \r\n        <div class=\"form-group\">  \r\n          <label for=\"role_id\">Role :</label>  \r\n\t        <select class=\"form-control\" formControlName=\"role_id\" name=\"role_id\" id=\"role_id\" [ngClass]=\"{ 'is-invalid': submitted && f.role_id.errors }\" >\r\n\t\t        <option [value]=\"\"></option>\r\n\t\t        <option *ngFor=\"let valueRole of role_data.data\" [value]=\"valueRole._id\">{{valueRole.title}}  ({{valueRole.slug}})</option>\r\n\t        </select> \r\n          <div *ngIf=\"submitted && f.role_id.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.role_id.errors.required\">Role is required</div>\r\n          </div> \r\n        </div> \r\n     \r\n\r\n<div class=\"row\">\r\n    <div class=\"form-group\"> \r\n        <button class=\"btn btn-success mr-4\" [disabled]='addForm.invalid' *ngIf=\"!btnvisibility\" (click)=\"onUpdate()\">Update</button> \r\n        <button class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button> \r\n    </div>\r\n</div>\r\n\r\n         \r\n      \r\n        <!-- <p>Form value: {{ addForm.value | json }}</p>   -->\r\n      </form>  \r\n    </div>  \r\n   \r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n    \r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ListUserComponent } from './list-users.component';\r\nimport { AddEmpComponent } from './add-users.component';  \r\nimport { ChangeRoleUserComponent } from './change-role-users.component';  \r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',component: ListUserComponent ,\r\n               children:  [{path: 'add-edit', component: AddEmpComponent},{path: 'role-edit', component: ChangeRoleUserComponent} ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ListUserRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\n\r\nimport { RoleInfo } from './../../_models/role';\r\nimport { UserInfo } from './../../_models/user';\r\n\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { UserService } from './../../_services/user.service';\r\nimport { RoleService } from './../../_services/role.service';\r\n\r\n@Component({\r\n    selector: 'app-list-users',\r\n    templateUrl: './list-users.component.html',\r\n    styleUrls: ['./list-users.component.scss'],\r\n    animations: [routerTransition()]\r\n\r\n})\r\nexport class ListUserComponent implements OnInit { \r\n    \r\n    persons: UserInfo[] = [];\r\n\r\n    role_data: RoleInfo[] = [];\r\n\r\n    currentUser: UserInfo;\r\n\r\n    constructor(private SetServiceRole: RoleService,\r\n                private userService: UserService,\r\n                private alertService: AlertService,\r\n                public route: ActivatedRoute,\r\n                private router: Router) {\r\n\r\n        // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      };\r\n\r\n    \tthis.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAllUsers();\r\n    }\r\n\r\n    deleteUser(id: number) {\r\n        this.userService.delete(id).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n                this.loadAllUsers() \r\n           });\r\n    }\r\n\r\n//Cette fonction permet de suspendre un compte utilisateur\r\n    suspendUser(id: number) {\r\n        this.userService.suspension(id).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n                this.loadAllUsers() \r\n           });\r\n    }\r\n    \r\n//Cette fonction permet de lever la suspension d'un compte utilisateur\r\n    unsuspendUser(id: number) {\r\n        this.userService.unSuspension(id).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n                this.loadAllUsers() \r\n           });\r\n    }\r\n\r\n    editEmp(personel: UserInfo): void {  \r\n     // console.log(JSON.stringify(personel.toString()));\r\n      localStorage.removeItem('editEmpId');  \r\n      localStorage.setItem('editEmpId',personel.toString()); \r\n      this.router.navigate(['/portal/list-users/add-edit']);  \r\n   } \r\n\r\n   changeRole(personel: UserInfo): void {  \r\n      localStorage.removeItem('editEmpId');  \r\n      localStorage.setItem('editEmpId',personel.toString()); \r\n      this.router.navigate(['/portal/list-users/role-edit']);  \r\n   } \r\n\r\n    private loadAllUsers() {\r\n        this.userService.getAll().pipe(first()).subscribe((persons: any) => { \r\n            this.persons = persons.data; \r\n            console.log(persons.data); \r\n        });\r\n\r\n        this.SetServiceRole.getAll().pipe(first()).subscribe((roles: any) => { \r\n            this.role_data = roles.data; \r\n        });\r\n    }\r\n\r\n    // getRoleName(roleUserTitle:string,TabRole:any): string {      \r\n    //     let verified:boolean = false, i=0,VarName=\"\";\r\n    //     if (roleUserTitle && TabRole) {\r\n    //        while (!verified && i < TabRole.length ) {\r\n\r\n    //       if ( String(TabRole[i].title) == roleUserTitle){\r\n    //           VarName=TabRole[i].title+' ('+TabRole[i].slug+')';\r\n    //           verified=true;\r\n    //         }\r\n    //         i++;\r\n    //       }\r\n    //     } \r\n    //  return VarName;\r\n    // }\r\n\r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <router-outlet></router-outlet>\r\n <div *ngIf=\"route.children.length === 0\">\r\n    <app-page-header [heading]=\"'Users'\" [icon]=\"'fa-users'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                    <alert></alert>\r\n                    Users Lists : {{persons?.length}}\r\n                        <!-- <div *ngIf=\"arr && arr.length > 0\">\r\n                        {{arr[0].name}}\r\n                        </div> -->\r\n                    \r\n                </div>\r\n                <div class=\"card-body table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Username</th>\r\n                            <th>Role</th>\r\n                            <th>Email</th>\r\n                            <th>Sex</th>\r\n                            <th>Phone</th>\r\n                            <th>Country</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let person of persons;let rank = index\">\r\n                            <td scope=\"row\">{{rank+1}}</td>\r\n                            <td>{{person.username}}</td>\r\n                            <!-- <td  style=\"color: blue;font-weight: bold\">{{ getRoleName(person.title_role,role_data) }}  </td> -->\r\n                            <td  style=\"color: blue;font-weight: bold\">{{ person.role_id }}  </td>\r\n                            <td>{{person.email}}</td>\r\n                            <td>{{person.gender}}</td>\r\n                            <td>{{person.phone}}</td>\r\n                            <td>{{person.suspended}}</td>\r\n                            <td>\r\n                                <button [disabled]=\"currentUser.user.title_role!='administrator'\" *ngIf=\"person.email!=currentUser.user.email\" (click)=\"changeRole(person._id)\" style=\"margin-right: 20px;\" class=\"btn btn-info\" style=\"margin-bottom: 2px;\"> {{person.title_role}}</button>\r\n                                <button *ngIf=\"person.email!=currentUser.user.email\" (click)=\"editEmp(person._id)\" style=\"margin-right: 20px;\" class=\"btn btn-info\" style=\"margin-bottom: 2px;\"> Edit</button>  \r\n                                <button *ngIf=\"person.email!=currentUser.user.email\" class=\"btn btn-danger\" (click)=\"deleteUser(person._id)\"  style=\"margin-bottom: 2px;\">Delete</button>\r\n                                <button *ngIf=\"person.email!=currentUser.user.email && person.suspended==false\" class=\"btn btn-success\" (click)=\"suspendUser(person._id)\"  style=\"margin-bottom: 2px;\">Suspend</button>\r\n                                <button *ngIf=\"person.email!=currentUser.user.email && person.suspended==true\" class=\"btn btn-warning\" (click)=\"unsuspendUser(person._id)\" >Unsuspend</button>\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule,FormsModule  }    from '@angular/forms';\r\nimport { ListUserRoutingModule } from './list-users-routing.module';\r\nimport { ListUserComponent } from './list-users.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { AlertModule } from './../../_directives/alert.module';\r\nimport { AddEmpComponent } from './add-users.component';  \r\nimport { ChangeRoleUserComponent } from './change-role-users.component';   \r\n\r\n@NgModule({\r\n    imports: [CommonModule, ListUserRoutingModule,ReactiveFormsModule,FormsModule,PageHeaderModule,AlertModule],\r\n    declarations: [ListUserComponent,AddEmpComponent,ChangeRoleUserComponent]\r\n})\r\nexport class ListUserModule {}\r\n"],"sourceRoot":"webpack:///"}