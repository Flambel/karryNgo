{"version":3,"sources":["./src/app/layout/services/manageservices.component.ts","./src/app/layout/services/manageservices.component.html","./src/app/layout/services/services-routing.module.ts","./src/app/layout/services/services.component.ts","./src/app/layout/services/services.component.html","./src/app/layout/services/services.module.ts"],"names":[],"mappings":"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","file":"services-services-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";  \r\nimport { Router } from \"@angular/router\";  \r\n\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\n\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { ServiceCatService } from './../../_services/services-categories.service';\r\n\r\n@Component({\r\n  selector: 'app-manageservices',\r\n  templateUrl: './manageservices.component.html',\r\n  styleUrls: ['./manageservices.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\n\r\nexport class ManageservicesComponent implements OnInit {\r\n\r\n  empformlabel: string = 'Add Service';  \r\n  empformbtn: string = 'Save';  \r\n  submitted = false;\r\n  categories: any;\r\n\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private alertService: AlertService,private SetServiceFunc: ServiceCatService) { \r\n\r\n   // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      }; \r\n  }\r\n\r\n\r\n  addForm: FormGroup;  \r\n  btnvisibility: boolean = true;  \r\n\r\n  ngOnInit() {\r\n\r\n  this.SetServiceFunc.getAll().pipe(first()).subscribe(serv_cats => { \r\n            this.categories = serv_cats;\r\n        });\r\n   \r\n\r\n\r\n  \tthis.addForm = this.formBuilder.group({   \r\n      _id: [''],   \r\n      serviceName: ['', Validators.required],       \r\n      categoryServiceId: ['', Validators.required],       \r\n      description: ['', Validators.required]       \r\n    });   \r\n\r\n    let data_id = localStorage.getItem('editDataService');\r\n\r\n    if (data_id) {  \r\n     \r\n     this.SetServiceFunc.getByIdServicesDBM(data_id).pipe(first()).subscribe( (dataget : any)  => {  \r\n          //this.addForm.patchValue(dataget.data); \r\n\r\n          this.addForm.patchValue({\r\n          _id: dataget.data._id,serviceName: dataget.data.serviceName,\r\n          categoryServiceId: dataget.data.categoryServiceId,description: dataget.data.description\r\n          }); \r\n     \r\n        });\r\n\r\n      this.btnvisibility = false;  \r\n      this.empformlabel = 'Edit Service';  \r\n      this.empformbtn = 'Update';  \r\n    } \r\n      \r\n\r\n  }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.addForm.controls; }\r\n\r\n    onSubmit() { \r\n\r\n       this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        }\r\n\r\n    this.SetServiceFunc.saveServicesDBM(this.addForm.value)  \r\n      .subscribe(\r\n       //on success \r\n       (data : any) => { \r\n            this.alertService.success(data.message, true);\r\n       },\r\n       //on error\r\n       error => {\r\n            this.alertService.error(error);\r\n       },\r\n        //on complete\r\n       () => { \r\n            this.router.navigate(['/portal/services']);  \r\n       });\r\n\r\n    }\r\n\r\n    onUpdate() { \r\n\r\n    this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        } \r\n\r\n      this.SetServiceFunc.updateServicesDBM(this.addForm.value).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n              this.router.navigate(['/portal/services']); \r\n           }); \r\n\r\n  } \r\n\r\n    onCancel() { this.router.navigate(['/portal/services']); } \r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <app-page-header [heading]=\"'Services'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                \t <h2 class=\"text-center\">{{empformlabel}}</h2>  \r\n           \t\t\t\t<alert></alert>\r\n                </div>\r\n\r\n                <div class=\"col-md-10\">  \r\n      <form [formGroup]=\"addForm\" novalidate class=\"form\">\r\n\r\n    <input  name=\"id\" type=\"hidden\" formControlName=\"_id\" >  \r\n\r\n<div class=\"row\">\r\n\r\n     <div class=\"form-group col-md-6\">  \r\n        <label for=\"service_name\">Service Name</label>  \r\n        <input formControlName=\"serviceName\" placeholder=\"Service Name\" class=\"form-control\" id=\"service_name\" [ngClass]=\"{ 'is-invalid': submitted && f.serviceName.errors }\">  \r\n        <div *ngIf=\"submitted && f.serviceName.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.serviceName.errors.required\">Service Name is required</div>\r\n        </div>\r\n     </div> \r\n\r\n     <div class=\"form-group col-md-6\">  \r\n        <label for=\"cat\">Choose Your Category</label>  \r\n          <select class=\"form-control\" *ngIf=\"categories && categories.data\" formControlName=\"categoryServiceId\" name=\"cat\" id=\"cat\" >\r\n            <option [value]=\"\"></option>\r\n            <option *ngFor=\"let val of categories.data\" [value]=\"val._id\">{{val.categoryName}}</option>\r\n          </select> \r\n        <div *ngIf=\"submitted && f.categoryServiceId.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.categoryServiceId.errors.required\">Category is required</div>\r\n        </div>\r\n     </div> \r\n\r\n</div>\r\n\r\n<div class=\"row\">\r\n     <div class=\"form-group col-md-10\">  \r\n        <label for=\"description\">Description</label>\r\n        <textarea formControlName=\"description\" placeholder=\"Enter Your Description\" class=\"form-control\" id=\"description\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" ></textarea>    \r\n        <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n        </div>\r\n     </div> \r\n</div>\r\n  \r\n\r\n\t\r\n\r\n     \r\n\r\n<div class=\"row\">\r\n    <div class=\"form-group col-md-12 text-center\">\r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"btnvisibility\" (click)=\"onSubmit()\">Save</button>   \r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"!btnvisibility\" (click)=\"onUpdate()\">Update</button> \r\n        <button class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button> \r\n    </div>\r\n</div>\r\n      \r\n        <!-- <p>Form value: {{ addForm.value | json }}</p>   -->\r\n\r\n      </form>  \r\n    </div>  \r\n   \r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n    \r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ServicesComponent } from './services.component';\r\nimport { ManageservicesComponent } from './manageservices.component';\r\n\r\nconst routes: Routes = [\r\n\r\n\t{\r\n\t    path: '',component: ServicesComponent,children:  \r\n\t\t[\r\n\t\t\t{path: 'manage-services', component: ManageservicesComponent}\r\n\t\t]\r\n\t} \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ServicesRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { ServiceCat } from './../../_models/service-categories';\r\nimport { ServiceData } from './../../_models/services';\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { ServiceCatService } from './../../_services/services-categories.service';\r\nimport { AskServiceService } from 'src/app/_services/ask-service.service';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class ServicesComponent implements OnInit {\r\n\r\n  services_data: ServiceData[] = [];\r\n  categories: ServiceCat[] = [];\r\n\r\n  constructor(private askServiceService: AskServiceService, private SetServiceFunc: ServiceCatService,private alertService: AlertService,public route: ActivatedRoute,\r\n        private router: Router) {\r\n\r\n        // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      };\r\n\r\n    }\r\n\r\n ngOnInit() {\r\n\r\n  \t\t\tthis.loadAllServicesDatas();\r\n  }\r\n\r\n  private loadAllServicesDatas() {\r\n\r\n\r\n        this.askServiceService.getAll().pipe(first()).subscribe((serv: any) => { \r\n            this.services_data = serv.data; \r\n            console.log(this.services_data)\r\n        });\r\n     \r\n     this.SetServiceFunc.getAll().pipe(first()).subscribe((serv_cats: any) => { \r\n            this.categories = serv_cats.data; \r\n        });\r\n\r\n    }\r\n\r\n      getCategoryName(idCategory:string,TabCat:any): string {\r\n\r\n              let verified:boolean = false, i=0;\r\n              let VarName=\"\";\r\n              if (idCategory && TabCat) {\r\n                 while (!verified && i < TabCat.length ) {\r\n\r\n                if ( String(TabCat[i]._id) == idCategory){\r\n                    VarName=TabCat[i].categoryName;\r\n                    verified=true;\r\n                  }\r\n\r\n                  i++;\r\n                }\r\n\r\n              } \r\n\r\n           return VarName;\r\n    }\r\n\r\n     add(): void { \r\n      localStorage.removeItem('editDataService'); \r\n      this.router.navigate(['/portal/services/manage-services']);  \r\n   }\r\n\r\n   edit(dataValue: ServiceData): void {      \r\n      localStorage.removeItem('editDataService');  \r\n      localStorage.setItem('editDataService',dataValue.toString()); \r\n      this.router.navigate(['/portal/services/manage-services']);  \r\n\r\n   }\r\n\r\n   delete(id: number) {\r\n        this.SetServiceFunc.deleteServicesDBM(id).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n                this.loadAllServicesDatas() \r\n           });\r\n    }\r\n\r\n\r\n\r\n        //getCategoryName(idCategory:string): Promise<any>{\r\n          //return new Promise ((reject,resolve)=> {\r\n           // this.SetServiceFunc.getAll().pipe(first()).subscribe(serv_cats => { \r\n            //  let tab:any = serv_cats;                  \r\n              //  let resultat= null;\r\n               // for(let i=0; i < tab.data.length; i++ ){\r\n                //  if (tab.data[i]._id == idCategory){\r\n               //     let resultat=tab.data[i].categoryName;\r\n               //   }\r\n               // }\r\n                //resultat ? resolve(resultat):reject(resultat);\r\n             //});\r\n          //});\r\n          //}  \r\n          // getCategoryName(value01).then( (data)=>{ \r\n           //    this.val=        \r\n          // }).catch ( error=>{         \r\n           //     this.val= \r\n           //})\r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <router-outlet></router-outlet>\r\n <div *ngIf=\"route.children.length === 0\">\r\n    <app-page-header [heading]=\"'Services'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                    <alert></alert>\r\n                    Services : {{services_data?.length}}\r\n<!--                     <li *ngFor=\"let obj of categories.data\">{{obj | json}}</li> -->\r\n                    <button style=\"text-align: right\" (click)=\"add()\" class=\"btn btn-success\"> Add</button>                 \r\n                </div>\r\n                <div class=\"card-body table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                        <tr> \r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Service Category</th>\r\n                            <th>Modified On </th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let val of services_data;let rank = index; \" >\r\n                                <td scope=\"row\">{{rank+1}} </td>\r\n                                <td style=\"color: green;font-weight: bold\">{{val.serviceName}}</td>\r\n                                <td style=\"color: green;font-weight: bold\">{{val.description}}</td>\r\n                                <td  style=\"color: blue;font-weight: bold\">{{ getCategoryName(val.categoryServiceId,categories) }}  </td>\r\n                                <td style=\"color: blue;font-weight: bold\"> {{val.create_date | date}}</td>\r\n                                <td> <button (click)=\"edit(val._id)\" style=\"margin-right: 20px;\" class=\"btn btn-info\"> Edit</button>  <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(val._id)\"  >Delete</button></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule,FormsModule  }    from '@angular/forms';\r\n\r\nimport { ServicesRoutingModule } from './services-routing.module';\r\nimport { ServicesComponent } from './services.component';\r\nimport { ManageservicesComponent } from './manageservices.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { AlertModule } from './../../_directives/alert.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ServicesRoutingModule,\r\n    PageHeaderModule,AlertModule,\r\n    ReactiveFormsModule,FormsModule\r\n  ],\r\n  declarations: [ServicesComponent,ManageservicesComponent]\r\n})\r\nexport class ServicesModule { }\r\n"],"sourceRoot":"webpack:///"}