{"version":3,"sources":["webpack:///src/app/layout/categorieservice/categorieservice-routing.module.ts","webpack:///src/app/layout/categorieservice/categorieservice.component.ts","webpack:///src/app/layout/categorieservice/categorieservice.component.html","webpack:///src/app/layout/categorieservice/categorieservice.module.ts","webpack:///src/app/layout/categorieservice/managecategorieservice.component.ts","webpack:///src/app/layout/categorieservice/managecategorieservice.component.html"],"names":["routes","path","component","children","CategorieserviceRoutingModule","forChild","imports","exports","CategorieserviceComponent","SetServiceCat","alertService","route","router","services_categ","routeReuseStrategy","shouldReuseRoute","loadAllServicesCategories","getAll","pipe","subscribe","serv_cats","data","localStorage","removeItem","navigate","dataValue","setItem","toString","id","success","message","error","selector","templateUrl","styleUrls","animations","CategorieserviceModule","declarations","ManagecategorieserviceComponent","formBuilder","empformlabel","empformbtn","submitted","imageSrc","btnvisibility","addForm","group","_id","categoryName","required","logo","data_id","getItem","getById","dataget","patchValue","invalid","logoValue","f","value","save","update","e","file","dataTransfer","files","target","pattern","reader","FileReader","type","match","alert","onload","_handleReaderLoaded","bind","readAsDataURL","result","controls","handleInputChange","onCancel"],"mappings":"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","file":"categorieservice-categorieservice-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CategorieserviceComponent } from './categorieservice.component';\r\nimport { ManagecategorieserviceComponent } from './managecategorieservice.component';\r\n\r\nconst routes: Routes = [\r\n\r\n\t{\r\n\t    path: '',component: CategorieserviceComponent,children:  \r\n\t\t[\r\n\t\t\t{path: 'manage-cat-services', component: ManagecategorieserviceComponent}\r\n\t\t]\r\n\t} \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CategorieserviceRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\n\r\nimport { ServiceCat } from './../../_models/service-categories';\r\n\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { ServiceCatService } from './../../_services/services-categories.service';\r\n\r\n@Component({\r\n  selector: 'app-categorieservice',\r\n  templateUrl: './categorieservice.component.html',\r\n  styleUrls: ['./categorieservice.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class CategorieserviceComponent implements OnInit {\r\n\r\n  services_categ: ServiceCat[] = [];\r\n\r\n  constructor(private SetServiceCat: ServiceCatService,private alertService: AlertService,public route: ActivatedRoute,\r\n        private router: Router) {\r\n\r\n        // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      };\r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n  \t\t\tthis.loadAllServicesCategories();\r\n  }\r\n\r\n    private loadAllServicesCategories() {\r\n        this.SetServiceCat.getAll().pipe(first()).subscribe((serv_cats: any) => { \r\n            this.services_categ = serv_cats.data; \r\n           // console.log('data Cat Service :'+JSON.stringify(this.services_categ));\r\n        });\r\n\r\n    }\r\n\r\n    add(): void { \r\n      localStorage.removeItem('editDataCatService'); \r\n      this.router.navigate(['/portal/categories-services/manage-cat-services']);  \r\n   }\r\n\r\n   edit(dataValue: ServiceCat): void {      \r\n      localStorage.removeItem('editDataCatService');  \r\n      localStorage.setItem('editDataCatService',dataValue.toString()); \r\n      this.router.navigate(['/portal/categories-services/manage-cat-services']);  \r\n\r\n   } \r\n\r\n    delete(id: number) {\r\n        this.SetServiceCat.delete(id).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n                this.loadAllServicesCategories() \r\n           });\r\n    }\r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <router-outlet></router-outlet>\r\n <div *ngIf=\"route.children.length === 0\">\r\n    <app-page-header [heading]=\"'Services Categories'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                    <alert></alert>\r\n                    Services Categories : {{services_categ?.length}}\r\n                    <button style=\"text-align: right\" (click)=\"add()\" class=\"btn btn-success\"> Add</button>                 \r\n                </div>\r\n                <div class=\"card-body table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Logo</th>\r\n                            <th>Created On </th>\r\n                            <th>Updated On </th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let val of services_categ;let rank = index\">\r\n                            <td scope=\"row\">{{rank+1}}</td>\r\n                            <td style=\"color: red;font-weight: bold\">{{val.categoryName}}</td>\r\n                            <td style=\"color: red;font-weight: bold\"><img [src]=\"val.logo | safe: 'resourceUrl'\" class=\"img-thumbnail\" style=\"max-width: 70px;max-height: 80px;\"></td>\r\n                            <td style=\"color: blue;font-weight: bold\">{{val.create_date | date}}</td>\r\n                            <td style=\"color: blue;font-weight: bold\">{{val.update_date | date}}</td>\r\n                            <td> <button (click)=\"edit(val._id)\" style=\"margin-right: 20px;\" class=\"btn btn-info\"> Edit</button>  <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(val._id)\"  >Delete</button></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> \r\n        </div> \r\n\r\n    </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule,FormsModule  }    from '@angular/forms';\r\n\r\nimport { CategorieserviceRoutingModule } from './categorieservice-routing.module';\r\nimport { CategorieserviceComponent } from './categorieservice.component';\r\nimport { ManagecategorieserviceComponent } from './managecategorieservice.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { AlertModule } from './../../_directives/alert.module';\r\n\r\nimport { SharedPipesModule } from './../../shared';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    CategorieserviceRoutingModule,\r\n    PageHeaderModule,AlertModule,SharedPipesModule,\r\n    ReactiveFormsModule,FormsModule\r\n  ],\r\n  declarations: [CategorieserviceComponent,ManagecategorieserviceComponent]\r\n})\r\nexport class CategorieserviceModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";  \r\nimport { Router } from \"@angular/router\";  \r\n\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { ServiceCatService } from './../../_services/services-categories.service';\r\n\r\n@Component({\r\n  selector: 'app-managecategorieservice',\r\n  templateUrl: './managecategorieservice.component.html',\r\n  styleUrls: ['./managecategorieservice.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\n\r\nexport class ManagecategorieserviceComponent implements OnInit {\r\n\r\n  empformlabel: string = 'Add Service Category';  \r\n  empformbtn: string = 'Save';  \r\n  submitted = false;\r\n  imageSrc: string = '';\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private alertService: AlertService,private SetServiceCat: ServiceCatService) { \r\n\r\n   // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      }; \r\n  }\r\n\r\n  addForm: FormGroup;  \r\n  btnvisibility: boolean = true;  \r\n\r\n  ngOnInit() {\r\n\r\n  \tthis.addForm = this.formBuilder.group({   \r\n      _id: [''],   \r\n      categoryName: ['', Validators.required],\r\n      logo: ['']\r\n    });   \r\n\r\n    let data_id = localStorage.getItem('editDataCatService');\r\n\r\n    if (data_id) {  \r\n     \r\n     this.SetServiceCat.getById(data_id).pipe(first()).subscribe( (dataget : any)  => {  \r\n          //this.addForm.patchValue(dataget.data); \r\n\r\n          this.addForm.patchValue({\r\n          _id: dataget.data._id,categoryName: dataget.data.categoryName\r\n          }); \r\n     \r\n        });\r\n\r\n      this.btnvisibility = false;  \r\n      this.empformlabel = 'Edit Service Category';  \r\n      this.empformbtn = 'Update';  \r\n    } \r\n      \r\n\r\n  }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.addForm.controls; }\r\n\r\n    onSubmit() { \r\n\r\n       this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        }\r\n\r\n        let logoValue=this.f.logo.value.toString();\r\n\r\n    this.SetServiceCat.save(this.f.categoryName.value,logoValue)  \r\n      .subscribe(\r\n       //on success \r\n       (data : any) => { \r\n            this.alertService.success(data.message, true);\r\n       },\r\n       //on error\r\n       error => {\r\n            this.alertService.error(error);\r\n       },\r\n        //on complete\r\n       () => { \r\n            this.router.navigate(['/portal/categories-services']);  \r\n       });\r\n\r\n    }\r\n\r\n    onUpdate() { \r\n\r\n    this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        } \r\n\r\n          this.SetServiceCat.update(this.addForm.value).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n              this.router.navigate(['/portal/categories-services']); \r\n           }); \r\n\r\n  } \r\n\r\n    onCancel() { this.router.navigate(['/portal/categories-services']); } \r\n\r\n       handleInputChange(e) {\r\n        var file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n        var pattern = /image-*/;\r\n        var reader = new FileReader();\r\n        if (!file.type.match(pattern)) {\r\n          alert('invalid format');\r\n          return;\r\n        }\r\n        reader.onload = this._handleReaderLoaded.bind(this);\r\n        reader.readAsDataURL(file);\r\n      }\r\n\r\n      _handleReaderLoaded(e) {\r\n        let reader = e.target;\r\n        this.imageSrc = reader.result;\r\n        this.addForm.patchValue({logo: this.imageSrc});\r\n        //console.log(this.imageSrc)\r\n  }\r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <app-page-header [heading]=\"'Services Categories'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                \t <h2 class=\"text-center\">{{empformlabel}}</h2>  \r\n           \t\t\t\t<alert></alert>\r\n                </div>\r\n\r\n                <div class=\"col-md-10\">  \r\n      <form [formGroup]=\"addForm\" novalidate class=\"form\">\r\n\r\n    <input  name=\"id\" type=\"hidden\" formControlName=\"_id\" >  \r\n\r\n<div class=\"row\">\r\n\t\r\n     <div class=\"form-group col-md-6\">  \r\n\t      <label for=\"cat_service\">Category Name</label>  \r\n\t      <input formControlName=\"categoryName\" placeholder=\"Service Category\" class=\"form-control\" id=\"cat_service\" [ngClass]=\"{ 'is-invalid': submitted && f.categoryName.errors }\">  \r\n\t      <div *ngIf=\"submitted && f.categoryName.errors\" class=\"invalid-feedback\">\r\n\t        <div *ngIf=\"f.categoryName.errors.required\">Category Name is requidred</div>\r\n\t      </div>\r\n     </div> \r\n\r\n     <div class=\"form-group col-md-6\">\r\n        <label for=\"imgUrl\">Logo</label>\r\n        \r\n        \r\n        <input formControlName=\"logo\" class=\"form-control\" type=\"hidden\">\r\n        <input name=\"imgUrl\" id=\"imgUrl\" type=\"file\" accept=\"image/*\"  class=\"form-control\" (change)=\"handleInputChange($event)\" style=\"height: auto\" />\r\n\r\n        <img [src]=\"imageSrc\" style=\"max-width:120px;max-height:120px\"/>\r\n\r\n        <!-- <pre>{{ this.addForm.value | json }}</pre> --> \r\n\r\n    </div> \r\n\r\n</div>\r\n  \r\n\r\n\t\r\n\r\n     \r\n\r\n<div class=\"row\">\r\n    <div class=\"form-group col-md-12 text-center\">\r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"btnvisibility\" (click)=\"onSubmit()\">Save</button>   \r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"!btnvisibility\" (click)=\"onUpdate()\">Update</button> \r\n        <button class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button> \r\n    </div>\r\n</div>\r\n      \r\n        <!-- <p>Form value: {{ addForm.value | json }}</p>   -->\r\n\r\n      </form>  \r\n    </div>  \r\n   \r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n    \r\n"]}