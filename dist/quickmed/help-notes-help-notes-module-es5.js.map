{"version":3,"sources":["webpack:///src/app/layout/help-notes/help-notes-routing.module.ts","webpack:///src/app/layout/help-notes/help-notes.component.ts","webpack:///src/app/layout/help-notes/help-notes.component.html","webpack:///src/app/layout/help-notes/help-notes.module.ts"],"names":["routes","path","component","HelpNotesRoutingModule","forChild","imports","exports","HelpNotesComponent","formLog","SetServiceRole","userService","route","router","helpnoteService","persons","notes","notesReceived","role_data","showHide","submitted","routeReuseStrategy","shouldReuseRoute","currentUser","JSON","parse","localStorage","getItem","getAllNotes","getAllReceivedNotes","loadAllUsers","regForm","group","required","getAll","pipe","subscribe","data","console","log","roles","invalid","saveHelpNotes","f","receiver","value","subject","user","_id","username","message","status","aaa","MessageSent","i","getAllReceived","reset","notesId","supNote","controls","selector","templateUrl","styleUrls","animations","HelpNotesModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMA,MAAM,GAAW,CACnB;AACIC,YAAI,EAAE,EADV;AACaC,iBAAS,EAAE;AADxB,OADmB,CAAvB;;UAUaC,sB;;;;;cAAAA;;;;2BAAAA,sB;AAAsB,S;AAAA,kBAHtB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGsB,EAFrB,4DAEqB;;;;4HAAtBG,sB,EAAsB;AAAA;AAAA,oBAFrB,4DAEqB;AAAA,S;AAFT,O;;;;;wEAEbA,sB,EAAsB;gBAJlC,sDAIkC;iBAJzB;AACNE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADH;AAENM,mBAAO,EAAE,CAAC,4DAAD;AAFH,W;AAIyB,U;;;;;;;;;;;;;;;;;;ACdnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0BwC;;AACI;;AACI;;AAGA;;AACI;;AACI;;AACJ;;AACJ;;AAIA;;AACI;;AACA;;AACI;;AACA;;AAA+C;;AAAc;;AAC7D;;AACI;;AAAyB;;AAAO;;AACpC;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAqE;;AAAE;;AACvE;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkD;;AAAG;;AACnG;;AACJ;;AACA;;AACJ;;AAEJ;;AACJ;;;;;;AAhCQ;;AAAA;;;;;;;;AAZpB;;AACM;;AAA8D;AAAA;;AAAA;;AAAA;;AAAA,gDAAyB,CAAzB;AAA0B,WAA1B;;AAC5D;;AACI;;AAAsB;;AAAU;;AAChC;;AAAsB;;AAAiC;;AACvD;;AAAsB;;AAAG;;AAAU;;AAAI;;AAA0B;;AACrE;;AACA;;AACA;;AACA;;AACI;;AAmCJ;;AACA;;AACR;;;;;;;;;AA5CkC;;AAAA;;AACA;;AAAA;;AACiB;;AAAA;;AAKlC;;AAAA;;;;;;;;AAqDL;;AACI;;AACI;;AAGA;;AACI;;AACI;;AACJ;;AACJ;;AAIA;;AACI;;AACA;;AACI;;AACA;;AAA+C;;AAAc;;AAC7D;;AACI;;AAAyB;;AAAO;;AACpC;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAqE;;AAAE;;AACvE;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkD;;AAAG;;AACnG;;AACJ;;AACA;;AACJ;;AACJ;;AACJ;;;;;;AA/BQ;;AAAA;;;;;;;;AAZpB;;AACM;;AAA8D;AAAA;;AAAA;;AAAA;;AAAA,iDAAyB,CAAzB;AAA0B,WAA1B;;AAC5D;;AACI;;AAAsB;;AAAU;;AAChC;;AAAsB;;AAAkC;;AACxD;;AAAsB;;AAAG;;AAAU;;AAAI;;AAA0B;;AACrE;;AACA;;AACA;;AACA;;AACI;;AAkCJ;;AACA;;AACR;;;;;;;;;AA3CkC;;AAAA;;AACA;;AAAA;;AACiB;;AAAA;;AAKlC;;AAAA;;;;;;AA+CT;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAOL;;AAAuC;;AAAmB;;;;;;AAD9D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAOL;;AAAqC;;AAAmB;;;;;;AAD5D;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;;;;;;;;;AA1IxC;;AACG;;AACA;;AACQ;;AACI;;AACI;;AAAsJ;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAK;;AAC3L;;AAAyJ;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAI;;AACrL;;AAA4J;AAAA;;AAAA;;AAAA;AAAA;;AAAgB;;AAAK;;AACrL;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAgDJ;;AACJ;;AAEA;;AACI;;AACI;;AA+CJ;;AACJ;;AACA;;AACI;;AAAI;;AAAoB;;AAExB;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AACI;;AAAG;;AAAG;;AACN;;AACA;;AAGJ;;AACA;;AACI;;AAAG;;AAAQ;;AACX;;AACA;;AAGJ;;AACA;;AACI;;AAAG;;AAAQ;;AACX;;AACA;;AAGJ;;AACA;;AAAiC;;AAAG;;AAAe;;AAAO;;AAAI;;AAC9D;;AACJ;;AACJ;;AACJ;;AACJ;;AACR;;AACJ;;;;;;AAnJqB;;AAAA,0FAAsB,MAAtB,EAAsB,aAAtB;;AAaW;;AAAA;;AAqDA;;AAAA;;AAoDF;;AAAA;;AAG0H;;AAAA;;AACnH;;AAAA;;AAMqF;;AAAA;;AACrF;;AAAA;;AAM+F;;AAAA;;AAC/F;;AAAA;;AAI2B;;AAAA;;;;UDzHnDC,kB;AAgBT,oCAAoBC,OAApB,EACYC,cADZ,EAEYC,WAFZ,EAGWC,KAHX,EAIYC,MAJZ,EAKYC,eALZ,EAK8C;AAAA;;AAL1B,eAAAL,OAAA,GAAAA,OAAA;AACR,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACD,eAAAC,KAAA,GAAAA,KAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAnBZ,eAAAC,OAAA,GAAsB,EAAtB;AACA,eAAAC,KAAA,GAAqB,EAArB;AACA,eAAAC,aAAA,GAA6B,EAA7B;AAEA,eAAAC,SAAA,GAAwB,EAAxB;AAGA,eAAAC,QAAA,GAAsB,EAAtB;AAKA,eAAAC,SAAA,GAAY,KAAZ,CAO8C,CAE1C;;AACF,eAAKP,MAAL,CAAYQ,kBAAZ,CAA+BC,gBAA/B,GAAkD;AAC9C,mBAAO,KAAP;AACH,WAFD;;AAIE,eAAKC,WAAL,GAAmBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAnB;AACA,eAAKC,WAAL;AACA,eAAKC,mBAAL;AACH;;;;qCAEU;AACP,iBAAKC,YAAL;AACA,iBAAKC,OAAL,GAAe,KAAKtB,OAAL,CAAauB,KAAb,CAAmB;AAC9B,0BAAW,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADmB;AAE9B,yBAAU,CAAC,EAAD,EAAK,0DAAWA,QAAhB,CAFoB;AAG9B,uBAAQ,CAAC,EAAD,EAAK,0DAAWA,QAAhB;AAHsB,aAAnB,CAAf;AAKH;;;yCAEsB;AAAA;;AACnB,iBAAKtB,WAAL,CAAiBuB,MAAjB,GAA0BC,IAA1B,CAA+B,8DAA/B,EAAwCC,SAAxC,CAAkD,UAACrB,OAAD,EAAkB;AAChE,mBAAI,CAACA,OAAL,GAAeA,OAAO,CAACsB,IAAvB;AACAC,qBAAO,CAACC,GAAR,CAAYxB,OAAO,CAACsB,IAApB;AACH,aAHD;AAKA,iBAAK3B,cAAL,CAAoBwB,MAApB,GAA6BC,IAA7B,CAAkC,8DAAlC,EAA2CC,SAA3C,CAAqD,UAACI,KAAD,EAAgB;AACjE,mBAAI,CAACtB,SAAL,GAAiBsB,KAAK,CAACH,IAAvB;AACH,aAFD;AAGH;;;qCAGO;AAAA;;AAEJ,iBAAKjB,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKW,OAAL,CAAaU,OAAjB,EAA0B;AACtB;AACH;;AACD,iBAAK3B,eAAL,CAAqB4B,aAArB,CAAmC,KAAKC,CAAL,CAAOC,QAAP,CAAgBC,KAAnD,EAA0D,KAAKF,CAAL,CAAOG,OAAP,CAAeD,KAAzE,EAAgF,KAAKF,CAAL,CAAO3B,KAAP,CAAa6B,KAA7F,EAAoG,KAAKtB,WAAL,CAAiBwB,IAAjB,CAAsBC,GAA1H,EAA+H,KAAKzB,WAAL,CAAiBwB,IAAjB,CAAsBE,QAArJ,EACKd,IADL,CACU,8DADV,EAEKC,SAFL,CAGQ,UAACC,IAAD,EAAgB;AACZC,qBAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACAC,qBAAO,CAACC,GAAR,CAAYF,IAAI,CAACa,OAAjB;;AACA,kBAAGb,IAAI,CAACc,MAAL,IAAa,SAAhB,EAA0B;AACtB,sBAAI,CAACC,GAAL;AACH;;AACD,oBAAI,CAACC,WAAL,GAAmBhB,IAAI,CAACa,OAAxB;AACH,aAVT;AAWH;;;wCAEU;AAAA;;AACP,iBAAKpC,eAAL,CAAqBoB,MAArB,CAA4B,KAAKX,WAAL,CAAiBwB,IAAjB,CAAsBC,GAAlD,EAAuDb,IAAvD,CAA4D,8DAA5D,EAAqEC,SAArE,CAA+E,UAACpB,KAAD,EAAgB;AAC3F,oBAAI,CAACA,KAAL,GAAaA,KAAK,CAACqB,IAAnB;AACAC,qBAAO,CAACC,GAAR,CAAY,MAAI,CAACvB,KAAjB;AACAsB,qBAAO,CAACC,GAAR,CAAYvB,KAAK,CAACkC,OAAlB;AACH,aAJD;;AAKA,iBAAI,IAAII,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAf,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,mBAAKnC,QAAL,CAAcmC,CAAd,IAAiB,KAAjB;AACH;AACJ,W,CAED;;;;gDACmB;AAAA;;AACf,iBAAKxC,eAAL,CAAqByC,cAArB,CAAoC,KAAKhC,WAAL,CAAiBwB,IAAjB,CAAsBC,GAA1D,EAA+Db,IAA/D,CAAoE,8DAApE,EAA6EC,SAA7E,CAAuF,UAACpB,KAAD,EAAgB;AACnG,oBAAI,CAACC,aAAL,GAAqBD,KAAK,CAACqB,IAA3B;AACAC,qBAAO,CAACC,GAAR,CAAY,MAAI,CAACtB,aAAjB;AACAqB,qBAAO,CAACC,GAAR,CAAYvB,KAAK,CAACkC,OAAlB;AACH,aAJD;AAKH;;;qCAEUI,C,EAAS;AAChB,gBAAG,KAAKnC,QAAL,CAAcmC,CAAd,KAAkB,KAArB,EAA2B;AACvB,mBAAKnC,QAAL,CAAcmC,CAAd,IAAmB,IAAnB;AACH,aAFD,MAEK;AACD,mBAAKnC,QAAL,CAAcmC,CAAd,IAAmB,KAAnB;AACH;AACJ;;;gCAEE;AACC,iBAAKvB,OAAL,CAAayB,KAAb;AACA,iBAAKH,WAAL,GAAiB,EAAjB;AACA,iBAAKjC,SAAL,GAAiB,KAAjB;AACH;;;mCAEQqC,O,EAAe;AAAA;;AACpB,iBAAK3C,eAAL,CAAqB4C,OAArB,CAA6BD,OAA7B,EAAsCtB,IAAtC,CAA2C,8DAA3C,EAAoDC,SAApD,CAA8D,UAACpB,KAAD,EAAgB;AAC1EsB,qBAAO,CAACC,GAAR,CAAYvB,KAAK,CAACkC,OAAlB;AACAZ,qBAAO,CAACC,GAAR,CAAYvB,KAAK,CAACmC,MAAlB;;AACA,oBAAI,CAACtB,mBAAL;;AACA,oBAAI,CAACD,WAAL;AACH,aALD;AAMH;;;8BA7DO;AAAE,mBAAO,KAAKG,OAAL,CAAa4B,QAApB;AAA+B;;;;;;;yBArDhCnD,kB,EAAkB,2H,EAAA,mI,EAAA,mI,EAAA,+H,EAAA,uH,EAAA,2I;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,gB;AAAA,e;AAAA,48F;AAAA;AAAA;ACtB/B;;AACI;;AACH;;AAFD;;;;AAAK;;AAEC;;AAAA;;;;;;qBDiBU,CAAC,6EAAD;;;;;;wEAGHA,kB,EAAkB;gBAP9B,uDAO8B;iBAPpB;AACPoD,oBAAQ,EAAE,gBADH;AAEPC,uBAAW,EAAE,6BAFN;AAGPC,qBAAS,EAAE,CAAC,6BAAD,CAHJ;AAIPC,sBAAU,EAAE,CAAC,6EAAD;AAJL,W;AAOoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaC,e;;;;;cAAAA;;;;2BAAAA,e;AAAe,S;AAAA,kBAHf,CAAC,4DAAD,EAAe,iFAAf,EAAsC,kEAAtC,EAA0D,0DAA1D,EAAsE,wDAAtE,EAAuF,oEAAvF,CAGe;;;;4HAAfA,e,EAAe;AAAA,yBAFT,wEAES;AAFS,oBADvB,4DACuB,EADT,iFACS,EADc,kEACd,EADkC,0DAClC,EAD8C,wDAC9C,EAD+D,oEAC/D;AAET,S;AAHmF,O;;;;;wEAGlGA,e,EAAe;gBAJ3B,sDAI2B;iBAJlB;AACN1D,mBAAO,EAAE,CAAC,4DAAD,EAAe,iFAAf,EAAsC,kEAAtC,EAA0D,0DAA1D,EAAsE,wDAAtE,EAAuF,oEAAvF,CADH;AAEN2D,wBAAY,EAAE,CAAC,wEAAD;AAFR,W;AAIkB,U","file":"help-notes-help-notes-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HelpNotesComponent } from './help-notes.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',component: HelpNotesComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class HelpNotesRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\n\r\nimport { UserInfo } from './../../_models/user';\r\nimport { RoleInfo } from './../../_models/role';\r\n\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { UserService } from './../../_services/user.service';\r\nimport { RoleService } from './../../_services/role.service';\r\nimport { HelpnoteService } from './../../_services/helpnote.service';\r\nimport { HelpNotes } from 'src/app/_models/helpNotes';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-help-notes',\r\n    templateUrl: './help-notes.component.html',\r\n    styleUrls: ['./help-notes.component.scss'],\r\n    animations: [routerTransition()]\r\n\r\n})\r\nexport class HelpNotesComponent implements OnInit { \r\n    \r\n    persons: UserInfo[] = [];\r\n    notes: HelpNotes[] = []; \r\n    notesReceived: HelpNotes[] = [];\r\n\r\n    role_data: RoleInfo[] = [];\r\n\r\n    messages: any;\r\n    showHide: boolean[] = [];\r\n\r\n    currentUser: UserInfo;\r\n    regForm: FormGroup;\r\n    MessageSent: string;\r\n    submitted = false;\r\n\r\n    constructor(private formLog: FormBuilder,\r\n        private SetServiceRole: RoleService,\r\n        private userService: UserService,\r\n        public route: ActivatedRoute,\r\n        private router: Router,\r\n        private helpnoteService: HelpnoteService) {\r\n\r\n        // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      };\r\n\r\n        this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        this.getAllNotes();\r\n        this.getAllReceivedNotes();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAllUsers();\r\n        this.regForm = this.formLog.group({    \r\n            'receiver':['', Validators.required],\r\n            'subject':['', Validators.required],\r\n            'notes':['', Validators.required]\r\n        });  \r\n    }\r\n   \r\n    private loadAllUsers() {\r\n        this.userService.getAll().pipe(first()).subscribe((persons: any) => { \r\n            this.persons = persons.data; \r\n            console.log(persons.data);\r\n        });\r\n\r\n        this.SetServiceRole.getAll().pipe(first()).subscribe((roles: any) => { \r\n            this.role_data = roles.data; \r\n        });\r\n    }\r\n\r\n    get f() { return this.regForm.controls; }\r\n    onSubmit(){\r\n\r\n        this.submitted = true;\r\n        if (this.regForm.invalid) {\r\n            return;\r\n        }\r\n        this.helpnoteService.saveHelpNotes(this.f.receiver.value, this.f.subject.value, this.f.notes.value, this.currentUser.user._id, this.currentUser.user.username)\r\n            .pipe(first())\r\n            .subscribe(\r\n                (data : any) => {\r\n                    console.log(data.data); \r\n                    console.log(data.message);\r\n                    if(data.status=='success'){\r\n                        this.aaa();\r\n                    }\r\n                    this.MessageSent = data.message;                   \r\n                });\r\n    }\r\n\r\n    getAllNotes(){ \r\n        this.helpnoteService.getAll(this.currentUser.user._id).pipe(first()).subscribe((notes: any) => { \r\n            this.notes = notes.data; \r\n            console.log(this.notes); \r\n            console.log(notes.message);\r\n        });          \r\n        for(var i=0; i<10000; i++){\r\n            this.showHide[i]=false;\r\n        }\r\n    }\r\n\r\n    //get all notes sents to the corrent user\r\n    getAllReceivedNotes(){ \r\n        this.helpnoteService.getAllReceived(this.currentUser.user._id).pipe(first()).subscribe((notes: any) => { \r\n            this.notesReceived = notes.data; \r\n            console.log(this.notesReceived); \r\n            console.log(notes.message); \r\n        });  \r\n    }\r\n\r\n    accordions(i: number){\r\n        if(this.showHide[i]==false){\r\n            this.showHide[i] = true;\r\n        }else{\r\n            this.showHide[i] = false;\r\n        }\r\n    }\r\n\r\n    aaa(){\r\n        this.regForm.reset();\r\n        this.MessageSent='';\r\n        this.submitted = false;\r\n    }\r\n\r\n    onDelete(notesId: string){\r\n        this.helpnoteService.supNote(notesId).pipe(first()).subscribe((notes: any) => { \r\n            console.log(notes.message); \r\n            console.log(notes.status); \r\n            this.getAllReceivedNotes();\r\n            this.getAllNotes();\r\n        });\r\n    }\r\n}\r\n","<div [@routerTransition]>\r\n    <router-outlet></router-outlet>\r\n <div *ngIf=\"route.children.length === 0\">\r\n    <app-page-header [heading]=\"'Messages'\" [icon]=\"'fa-envelope'\"></app-page-header>\r\n    <div class=\"row\">        \r\n            <div class=\"col-lg-2\"  style=\"background-color: rgb(237, 245, 245);\">\r\n                <div class=\"nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n                    <a class=\"nav-link active\" id=\"v-pills-home-tab\" data-toggle=\"pill\" href=\"#v-pills-home\" role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\" (click)=\"getAllReceivedNotes()\">Inbox</a>\r\n                    <a class=\"nav-link\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\" role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\" (click)=\"getAllNotes()\">Sent</a>\r\n                    <a class=\"nav-link\" id=\"v-pills-messages-tab\" data-toggle=\"pill\" href=\"#v-pills-messages\" role=\"tab\" aria-controls=\"v-pills-messages\" aria-selected=\"false\" (click)=\"aaa()\">Write</a>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-10\">\r\n                <div class=\"tab-content\" id=\"v-pills-tabContent\">\r\n                    <div class=\"tab-pane fade show active\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">\r\n                        <ul>\r\n                            <li *ngFor=\"let note of notesReceived;let rank = index\" style=\"list-style: none; background-color: rgb(187, 247, 175); border-radius: 12px; margin-bottom: 5px; border-bottom: 1px solid black;\">                                \r\n                                  <a class=\"btn btn-primary\" style=\"height: 100%; width: 100%;\" (click)=\"accordions(rank+1)\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-1\">{{rank+1}}</div>\r\n                                        <div class=\"col-lg-4\">{{note.username_celui_qui_ecrit}}</div>\r\n                                        <div class=\"col-lg-7\"><b>Subject : </b>{{note.subjest_note_help}}</div>\r\n                                    </div>\r\n                                    </a>\r\n                                    <div class=\"row\">\r\n                                    <div class=\"col\">\r\n                                        <div *ngIf=\"showHide[rank+1]\" >\r\n                                            <div class=\"card card-body\">\r\n                                                {{note.note_help}}\r\n\r\n                                                <!-- Button trigger modal -->\r\n                                                <div class=\"col-lg-5\">\r\n                                                    <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" style=\"width: 100%;\">\r\n                                                        Delete message\r\n                                                    </button>\r\n                                                </div>\r\n                                                \r\n                                                \r\n                                                <!-- Modal -->\r\n                                                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                                    <div class=\"modal-dialog\" role=\"document\">\r\n                                                    <div class=\"modal-content\">\r\n                                                        <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Message</h5>\r\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                            <span aria-hidden=\"true\">&times;</span>\r\n                                                        </button>\r\n                                                        </div>\r\n                                                        <div class=\"modal-body\">\r\n                                                        Are you sure you want to delete this message?\r\n                                                        </div>\r\n                                                        <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\r\n                                                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onDelete(note._id)\" data-dismiss=\"modal\">Yes</button> \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                            </li> \r\n                        </ul>                        \r\n                    </div>\r\n\r\n                    <div class=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">\r\n                        <ul>\r\n                            <li *ngFor=\"let note of notes;let rank = index\" style=\"list-style: none; background-color: rgb(187, 247, 175); border-radius: 12px; margin-bottom: 5px; border-bottom: 1px solid black;\">                                \r\n                                  <a class=\"btn btn-primary\" style=\"height: 100%; width: 100%;\" (click)=\"accordions(rank+1)\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-lg-1\">{{rank+1}}</div>\r\n                                        <div class=\"col-lg-4\">{{note.username_celui_qui_recoit}}</div>\r\n                                        <div class=\"col-lg-7\"><b>Subject : </b>{{note.subjest_note_help}}</div>\r\n                                    </div>\r\n                                    </a>\r\n                                    <div class=\"row\">\r\n                                    <div class=\"col\">\r\n                                        <div *ngIf=\"showHide[rank+1]\" >\r\n                                            <div class=\"card card-body\">\r\n                                                {{note.note_help}}\r\n\r\n                                                <!-- Button trigger modal -->\r\n                                                <div class=\"col-lg-5\">\r\n                                                    <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" style=\"width: 100%;\">\r\n                                                        Delete message\r\n                                                    </button>\r\n                                                </div>\r\n                                                \r\n                                                \r\n                                                <!-- Modal -->\r\n                                                <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                                    <div class=\"modal-dialog\" role=\"document\">\r\n                                                    <div class=\"modal-content\">\r\n                                                        <div class=\"modal-header\">\r\n                                                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Delete Message</h5>\r\n                                                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                            <span aria-hidden=\"true\">&times;</span>\r\n                                                        </button>\r\n                                                        </div>\r\n                                                        <div class=\"modal-body\">\r\n                                                        Are you sure you want to delete this message?\r\n                                                        </div>\r\n                                                        <div class=\"modal-footer\">\r\n                                                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">No</button>\r\n                                                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onDelete(note._id)\" data-dismiss=\"modal\">Yes</button> \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                            </li>\r\n                        </ul>  \r\n                    </div>\r\n                    <div class=\"tab-pane fade\" id=\"v-pills-messages\" role=\"tabpanel\" aria-labelledby=\"v-pills-messages-tab\">\r\n                        <h4>Compose New Message.</h4>\r\n\r\n                        <form [formGroup]=\"regForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"form-group\">\r\n                                <b>To.</b>\r\n                                <input type=\"text\" formControlName=\"receiver\" placeholder=\"Receiver's Username or Email Address:\" class=\"form-control\"  [ngClass]=\"{ 'is-invalid': submitted && f.receiver.errors }\">\r\n                                <div *ngIf=\"submitted && f.receiver.errors\" class=\"invalid-feedback text-danger\">\r\n                                    <div *ngIf=\"f.receiver.errors.required\">Receiver is required</div>\r\n                                </div>\r\n                            </div>                               \r\n                            <div class=\"form-group\">\r\n                                <b>Subject.</b>\r\n                                <input type=\"text\" formControlName=\"subject\" placeholder=\"Subject:\" class=\"form-control\"  [ngClass]=\"{ 'is-invalid': submitted && f.subject.errors }\">\r\n                                <div *ngIf=\"submitted && f.subject.errors\" class=\"invalid-feedback text-danger\">\r\n                                    <div *ngIf=\"f.subject.errors.required\">Subject is required</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <b>Message.</b>\r\n                                <textarea type=\"text\" rows=\"7\" formControlName=\"notes\" placeholder=\"Message:\" class=\"form-control\"  [ngClass]=\"{ 'is-invalid': submitted && f.notes.errors }\"></textarea>\r\n                                <div *ngIf=\"submitted && f.notes.errors\" class=\"invalid-feedback text-danger\">\r\n                                    <div *ngIf=\"f.notes.errors.required\">Message is required</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"text-align: center;\"><p>{{MessageSent}}<b></b></p></div>\r\n                            <input type=\"submit\" class=\"login loginmodal-submit\" value=\"Send\">      \r\n                        </form>\r\n                    </div>                    \r\n                </div>\r\n            </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule,FormsModule  }    from '@angular/forms';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { AlertModule } from './../../_directives/alert.module'; \r\nimport { HelpNotesComponent } from './help-notes.component';\r\nimport { HelpNotesRoutingModule } from './help-notes-routing.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, HelpNotesRoutingModule,ReactiveFormsModule,FormsModule,PageHeaderModule,AlertModule],\r\n    declarations: [HelpNotesComponent]\r\n})\r\nexport class HelpNotesModule {}\r\n"]}