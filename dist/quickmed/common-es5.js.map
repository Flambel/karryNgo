{"version":3,"sources":["webpack:///src/app/_classes/serviceClass.ts","webpack:///src/app/_directives/alert.component.ts","webpack:///src/app/_directives/alert.component.html","webpack:///src/app/_directives/alert.module.ts","webpack:///src/app/_models/helpNotes.ts","webpack:///src/app/_models/register.ts","webpack:///src/app/_services/alert.service.ts","webpack:///src/app/_services/ask-service.service.ts","webpack:///src/app/_services/helpnote.service.ts","webpack:///src/app/_services/notification.service.ts","webpack:///src/app/_services/role.service.ts","webpack:///src/app/_services/services-categories.service.ts","webpack:///src/app/router.animations.ts"],"names":["ServiceClass","SetServiceCat1","services_category_home","getAll","subscribe","res","services_category","console","log","i","err","message","category_id","getSubCategBiCategId","services_subcategory","AlertComponent","alertService","subscription","getMessage","unsubscribe","selector","templateUrl","AlertModule","imports","declarations","exports","HelpNotes","Register","data","firstname","surname","username","email","password","title","gender","id_number","ethnic_group","picture","AlertService","router","subject","keepAfterNavigationChange","events","event","next","type","text","asObservable","providedIn","AskServiceService","http","notificationService","notification","post","apiUrl","serviceAskForHelp_id","_id","saveNotification","alert","user_id","get","service_id","HelpnoteService","userId","helpnote_id","receiver","senderId","formValue","serviceaskforhelp_id","helpnotes_id","name","NotificationService","RoleService","val","patch","id","ServiceCatService","categoryName","logo","value","categoryServiceId","routerTransition","noTransition","slideToRight","transform","slideToLeft","slideToBottom","slideToTop"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { ServiceInfoData } from './../_models/services'\r\nimport { ServiceCatService } from './../_services/services-categories.service'\r\n\r\nexport class ServiceClass{\r\n\r\n    services_category: any;\r\n    services_category_home: any[] = [];\r\n    services_subcategory: any;\r\n    constructor(private SetServiceCat1: ServiceCatService){}\r\n\r\n    loadAllCategories() {\r\n        this.SetServiceCat1.getAll()\r\n        .subscribe(\r\n            res => {\r\n                this. services_category = res['data'];\r\n                console.log(res);\r\n                for(var i=0; i<3; i++){\r\n                    this.services_category_home[i] = res['data'][i];\r\n                }\r\n                console.log(this.services_category);\r\n            },\r\n            err => {\r\n                console.log('Error occured:' , err);\r\n                console.log(err.message, 'Error occured');\r\n            }\r\n        );\r\n    }\r\n\r\n    loadAllSubcategories(category_id: string) {\r\n        this.SetServiceCat1.getSubCategBiCategId(category_id)\r\n        .subscribe(\r\n            res => {\r\n                this. services_subcategory = res['data'];                \r\n                console.log(this.services_subcategory);\r\n            },\r\n            err => {\r\n                console.log('Error occured:' , err);\r\n                console.log(err.message, 'Error occured');\r\n            }\r\n        );\r\n    }\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AlertService } from '../_services/alert.service';\r\n\r\n@Component({\r\n    selector: 'alert',\r\n    templateUrl: 'alert.component.html'\r\n})\r\n\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n    private subscription: Subscription;\r\n    message: any;\r\n\r\n    constructor(private alertService: AlertService) { }\r\n\r\n    ngOnInit() {\r\n        this.subscription = this.alertService.getMessage().subscribe(message => { \r\n            this.message = message; \r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n}","<div *ngIf=\"message\"  [ngClass]=\"{ 'alert': message, 'alert-success alert-dismissible fade show': message.type === 'success', 'alert-danger alert-dismissible fade show': message.type === 'error' }\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>{{message.text}}</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AlertComponent } from './alert.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule],\r\n    declarations: [AlertComponent],\r\n    exports: [AlertComponent]\r\n})\r\nexport class AlertModule {}","export class HelpNotes {\r\n    id: number;\r\n    _id:string;\r\n    serviceAskForHelp_id: string;\r\n    user_id_celui_qui_ecrit: string;\r\n    user_id_celui_qui_recoit: string;\r\n    user_name_celui_qui_ecrit: string;\r\n    user_name_celui_qui_recoit: string;\r\n    subject: string;\r\n    note_help: string;\r\n    data?:any;\r\n}","export class Register {\r\n\r\n    public firstname: string;\r\n    public surname: string;\r\n    public username: string;\r\n    public email: string;\r\n    public password: string;\r\n    public title: string;\r\n    public gender: string;\r\n    public id_number: string;\r\n    public ethnic_group: string;\r\n    public picture: string;\r\n\r\n    constructor(data: any) { \r\n        this.firstname = data.firstname;\r\n        this.surname = data.surname;\r\n        this.username = data.username;\r\n        this.email = data.email;\r\n        this.password = data.password;\r\n        this.title = data.title;\r\n        this.gender = data.gender;\r\n        this.id_number = data.id_number;\r\n        this.ethnic_group = data.ethnic_group;\r\n    }\r\n    \r\n    setData(data: any) {\r\n        if(data.firstname)\r\n            this.firstname = data.firstname;\r\n        if(data.surname)\r\n            this.surname = data.surname;\r\n        if(data.username)\r\n            this.username = data.username;\r\n        if(data.email)\r\n            this.email = data.email;\r\n        if(data.password)\r\n            this.password = data.password;\r\n        if(data.title)\r\n            this.title = data.title;\r\n        if(data.gender)\r\n            this.gender = data.gender;\r\n        if(data.id_number)\r\n            this.id_number = data.id_number;\r\n        if(data.ethnic_group)\r\n            this.ethnic_group = data.ethnic_group;\r\n        if(data.picture)\r\n            this.picture = data.picture;\r\n    }\r\n  \r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: 'root'\r\n    }\r\n)\r\nexport class AlertService {\r\n    private subject = new Subject<any>();\r\n    private keepAfterNavigationChange = false;\r\n\r\n    constructor(private router: Router) {\r\n        // clear alert message on route change\r\n        router.events.subscribe(event => {\r\n            if (event instanceof NavigationStart) {\r\n                if (this.keepAfterNavigationChange) {\r\n                    // only keep for a single location change\r\n                    this.keepAfterNavigationChange = false;\r\n                } else {\r\n                    // clear alert\r\n                    this.subject.next();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    success(message: string, keepAfterNavigationChange = false) {\r\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\r\n        this.subject.next({ type: 'success', text: message });\r\n    }\r\n\r\n    error(message: string, keepAfterNavigationChange = false) {\r\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\r\n        this.subject.next({ type: 'error', text: message });\r\n    }\r\n\r\n    getMessage(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { NotificationService } from '../_services/notification.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AskServiceService {\n\n    constructor(private http: HttpClient,\n                private notificationService: NotificationService,\n                private router: Router) { }\n\n    saveService(data, notification) {\n        // console.log(data)\n        console.log(notification)\n        this.http.post(`${environment.apiUrl}/service/new`, data)\n        .subscribe(\n            res => {\n                console.log(res);\n                notification.serviceAskForHelp_id = res['data']._id;\n                console.log(notification);\n                this.notificationService.saveNotification(notification);\n                alert('data saved successfully.');\n            },\n            err => {\n                console.log('Error occured:' , err);\n                console.log(err.message, 'Error occured');\n            }\n        );\n    }\n\n    getUserServices(user_id){\n        console.log(user_id)\n        return this.http.get(`${environment.apiUrl}/service/getUserService/`+ user_id);\n    }\n\n    getAll(){\n        return this.http.get(`${environment.apiUrl}/service/getAll`);\n    }\n\n    getServiceById(service_id: string){\n        return this.http.get(`${environment.apiUrl}/service/get/` +service_id);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { HelpNotes } from '../_models/helpNotes';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: 'root'\r\n      }\r\n)\r\nexport class HelpnoteService { \r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // getAll(userId: string) {\r\n    //     return this.http.get<HelpNotes[]>(`${environment.apiUrl}/HelpNotes/getAll` + userId);\r\n    //     console.log(HelpNotes);\r\n    // }\r\n\r\n    //Pour récupérer tous les messages envoyés\r\n    getAll(userId: string) {\r\n        return this.http.post<HelpNotes[]>(`${environment.apiUrl}/HelpNotes/getAll`, {userId: userId});\r\n    }\r\n\r\n    //Pour récupérer tous les messages reçus\r\n    getAllReceived(userId: string) {\r\n        return this.http.post<HelpNotes[]>(`${environment.apiUrl}/HelpNotes/getAllReceived`, {userId: userId});\r\n    }\r\n\r\n    supNote(helpnote_id: string) {\r\n        return this.http.delete(`${environment.apiUrl}/HelpNotes/supprimer/` + helpnote_id);\r\n        console.log(HelpNotes);\r\n    }\r\n\r\n    saveHelpNotes(receiver: string, subject: string, message: string, senderId: string, username: string) {\r\n        return this.http.post(`${environment.apiUrl}/HelpNotes/enregistrer`, {receiver:receiver, subject:subject, message:message, senderId:senderId, username: username});\r\n    }\r\n    \r\n    //permet d'enregistrer un helpNote d'un service Ask For Help\r\n    saveHelpNote(formValue) {\r\n        return this.http.post(`${environment.apiUrl}/helpnotes/save`, formValue);\r\n    }\r\n\r\n    //enregistre la reponse d'un offreur sur le service qu'il propose\r\n    saveAnswer(formValue) { \r\n        return this.http.post(`${environment.apiUrl}/helpnotes/saveAnswer`, formValue);\r\n    }\r\n\r\n    getAllHelpNotes(serviceaskforhelp_id:string) {\r\n        return this.http.get(`${environment.apiUrl}/helpnotes/get/allhelpnotes/` +serviceaskforhelp_id);\r\n    }\r\n\r\n    //permet de GET tous les AnswerHelps d'un HelpNote\r\n    getAllAnswerHelp(helpnotes_id:string) {\r\n        return this.http.get(`${environment.apiUrl}/helpnotes/get/allanshelp/` +helpnotes_id);\r\n    }\r\n\r\n    saveChat(formValue) {\r\n        return this.http.post(`${environment.apiUrl}/HelpNotes/enregistrer`, formValue);\r\n    }\r\n\r\n    // Save the message sent by a user via livechat\r\n    saveMessage(name: string, email: string, message: string) {\r\n        return this.http.post(`${environment.apiUrl}/livechat/save`, {name:name, email:email, message:message});\r\n    }\r\n\r\n    // getAllChats permet à l'administrateur de get tous les messages envoyeés par les internautes via le livechat\r\n    getAllChats(){\r\n        return this.http.get(`${environment.apiUrl}/livechat/getAll`);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    constructor(private http: HttpClient,\n                private router: Router) { }\n\n    saveNotification(notification) {\n        this.http.post(`${environment.apiUrl}/notification/new`, notification)\n        .subscribe(\n            res => {\n                console.log(res);                \n            },\n            err => {\n                console.log('Error occured:' , err);\n                console.log(err.message, 'Error occured');\n            }\n        );\n    }\n\n    getNotificationsByUserId(user_id) {\n        return this.http.get(`${environment.apiUrl}/notification/get/`+ user_id);\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { RoleInfo } from '../_models/role';\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: 'root'\r\n      }\r\n)\r\nexport class RoleService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<RoleInfo[]>(`${environment.apiUrl}/roles/get`);\r\n    }\r\n\r\n    getById(val: string) {\r\n        return this.http.get(`${environment.apiUrl}/roles/view/` + val);\r\n    }\r\n\r\n    save(formValue: RoleInfo) {\r\n        return this.http.post(`${environment.apiUrl}/roles/save`, formValue);\r\n    }\r\n\r\n    update(formValue: RoleInfo) {\r\n        return this.http.patch(`${environment.apiUrl}/roles/editrole/` + formValue._id, formValue);\r\n    }\r\n\r\n    editRole(formValue: any) {\r\n        return this.http.patch(`${environment.apiUrl}/roles/editrole/user/` + formValue.user_id, formValue);\r\n    }\r\n\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${environment.apiUrl}/roles/delete/` + id);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\nimport { ServiceData } from '../_models/services';\r\nimport { ServiceCat } from '../_models/service-categories';\r\n\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: 'root'\r\n      }\r\n)\r\nexport class ServiceCatService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<ServiceCat[]>(`${environment.apiUrl}/category/getAll`);\r\n    }\r\n    \r\n    getSubCategBiCategId(category_id) {\r\n        return this.http.get(`${environment.apiUrl}/subcategory/get/`+category_id);\r\n    }\r\n    \r\n    getCategoryName(category_id) {\r\n        return this.http.get(`${environment.apiUrl}/subcategory/getCategoryName/`+category_id);\r\n    }\r\n\r\n    getAllSubCateg() {\r\n        return this.http.get<ServiceCat[]>(`${environment.apiUrl}/subcategory/getAll`);\r\n    }\r\n    \r\n    getAllServicesDBM() {\r\n        return this.http.get<ServiceData[]>(`${environment.apiUrl}/services/get`);\r\n    }\r\n\r\n\r\n\r\n    getById(val: string) {\r\n        return this.http.get(`${environment.apiUrl}/category/view/` + val);\r\n    }\r\n\r\n    getByIdServicesDBM(val: string) {\r\n        return this.http.get(`${environment.apiUrl}/services/view/` + val);\r\n    }\r\n\r\n    getByIdSubCat(val: string) {\r\n        return this.http.get(`${environment.apiUrl}/souscategory/view/` + val);\r\n    }\r\n\r\n\r\n\r\n    save(categoryName: string, logo: string) {\r\n        return this.http.post(`${environment.apiUrl}/category/services/save`, { categoryName: categoryName, logo: logo });\r\n    }\r\n\r\n    saveServicesDBM(formValue: ServiceData) {\r\n        return this.http.post(`${environment.apiUrl}/services/save`, formValue);\r\n    }\r\n\r\n    saveSubCat(formValue: ServiceCat) {\r\n        return this.http.post(`${environment.apiUrl}/souscategory/save`, formValue);\r\n    }\r\n\r\n    getSubCatbyCatID(value: string) {\r\n        return this.http.post(`${environment.apiUrl}/souscategory/get/souscategory/ofAcategory`,  { categoryServiceId: value });\r\n    }\r\n\r\n\r\n\r\n    update(formValue: ServiceCat) {\r\n        return this.http.patch(`${environment.apiUrl}/category/services/update/` + formValue._id, formValue);\r\n    }\r\n    \r\n    updateServicesDBM(formValue: ServiceData) {\r\n        return this.http.patch(`${environment.apiUrl}/services/update/` + formValue._id, formValue);\r\n    }\r\n\r\n    updateSubCat(formValue: ServiceCat) {\r\n        return this.http.patch(`${environment.apiUrl}/souscategory/update/` + formValue._id, formValue);\r\n    }\r\n\r\n\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${environment.apiUrl}/category/services/delete/` + id);\r\n    }\r\n\r\n    deleteServicesDBM(id: number) {\r\n        return this.http.delete(`${environment.apiUrl}/services/delete/` + id);\r\n    }\r\n\r\n    deleteSubCat(id: number) {\r\n        return this.http.delete(`${environment.apiUrl}/souscategory/delete/` + id);\r\n    }\r\n}","import { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function routerTransition() {\r\n\r\n    return noTransition();\r\n}\r\n\r\nexport function noTransition() {\r\n    return trigger('routerTransition', []);\r\n}\r\n\r\nexport function slideToRight() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({})),\r\n        state('*', style({})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateX(-100%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n        ]),\r\n        transition(':leave', [\r\n            style({ transform: 'translateX(0%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateX(100%)' }))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function slideToLeft() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({})),\r\n        state('*', style({})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateX(100%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateX(0%)' }))\r\n        ]),\r\n        transition(':leave', [\r\n            style({ transform: 'translateX(0%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateX(-100%)' }))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function slideToBottom() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({})),\r\n        state('*', style({})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateY(-100%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateY(0%)' }))\r\n        ]),\r\n        transition(':leave', [\r\n            style({ transform: 'translateY(0%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateY(100%)' }))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function slideToTop() {\r\n    return trigger('routerTransition', [\r\n        state('void', style({})),\r\n        state('*', style({})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateY(100%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateY(0%)' }))\r\n        ]),\r\n        transition(':leave', [\r\n            style({ transform: 'translateY(0%)' }),\r\n            animate('0.5s ease-in-out', style({ transform: 'translateY(-100%)' }))\r\n        ])\r\n    ]);\r\n}\r\n"]}