{"version":3,"sources":["./node_modules/@ngx-translate/core/fesm2015/ngx-translate-core.js","./src/app/layout/about/about.component.ts","./src/app/layout/about/about.component.html","./src/app/layout/components/header/header.component.ts","./src/app/layout/components/header/header.component.html","./src/app/layout/components/sidebar/sidebar.component.ts","./src/app/layout/components/sidebar/sidebar.component.html","./src/app/layout/layout-routing.module.ts","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/layout/layout.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkJ;AACjF;AACa;;AAE9E;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,+CAAE,GAAG;AACpB;AACA;AACA,oEAAoE,mEAAmE;AACvI,4BAA4B,gEAAyB,EAAE,gEAAgE;AACvH,yCAAyC,mEAA4B;AACrE,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,WAAW,EAgBV;AACD;AACA;AACA;AACA;AACA;AACA,WAAW,EAYV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wFAAwF,mDAAmD;AAC3I,sCAAsC,gEAAyB,EAAE,oFAAoF;AACrJ,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,iCAAiC;AACjC;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAmBV;AACD;AACA;AACA;AACA,kCAAkC,QAAQ,UAAU;AACpD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE;AACnC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,0EAA0E,yEAAyE;AACnJ,+BAA+B,gEAAyB,EAAE,sEAAsE;AAChI,4CAA4C,mEAA4B;AACxE,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;AACtB,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAeV;AACD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,wEAAwE,uEAAuE;AAC/I,8BAA8B,gEAAyB,EAAE,oEAAoE;AAC7H,2CAA2C,mEAA4B;AACvE,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA,WAAW,EA6CV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,sBAAsB,4DAAc;AACpC,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C,WAAW,EAAE;AACb,uBAAuB,4DAAc;AACrC;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAKV;AACD;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EAKV;AACD;AACA;AACA;AACA,mCAAmC;AACnC,WAAW,EAKV;AACD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAY;AACpD,iCAAiC,0DAAY;AAC7C,wCAAwC,0DAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAI;AAC7B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAI;AAC7B;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,cAAc;AACd;AACA,mBAAmB,+CAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iFAAiF,kEAAW,KAAK,2DAAI;AACrG,4DAA4D,0DAAG;AAC/D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iEAAiE,kEAAW,KAAK,2DAAI;AACrF;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,iHAAiH;AACjH;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,oDAAoD;AAC3F;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,oBAAoB,yDAAY;AAChC;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,qBAAqB,yDAAY,0BAA0B,+CAAE,aAAa,EAAE;AAC5E,uBAAuB,qDAAQ,eAAe,0DAAG;AACjD,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gEAAS;AAC1D,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,yDAAY,cAAc,+CAAE;AACnD,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,mBAAmB,yDAAY,cAAc,+CAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAM,CAAC,kDAAK;AAC3B,oBAAoB;AACpB;AACA,gFAAgF,gEAAS;AACzF,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAAE;AACzB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAM,CAAC,kDAAK;AAC3B,oBAAoB;AACpB;AACA,yEAAyE,gEAAS;AAClF,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,mBAAmB,yDAAY,cAAc,+CAAE;AAC/C,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,YAAY,yDAAY;AACxB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uCAAuC,oDAAoD;AAC3F;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,oDAAoD;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,oDAAoD;AAC3F;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,kBAAkB,sDAAe,mBAAmB,sDAAe,qBAAqB,sDAAe,mBAAmB,sDAAe,6BAA6B,sDAAe,oBAAoB,sDAAe,aAAa,sDAAe,cAAc,sDAAe,oBAAoB;AACtZ,yBAAyB,gEAAyB,EAAE,0DAA0D;AAC9G;AACA;AACA,KAAK,uBAAuB;AAC5B,KAAK,wBAAwB;AAC7B,KAAK,0BAA0B;AAC/B,KAAK,wBAAwB;AAC7B,KAAK,kCAAkC;AACvC,KAAK,8BAA8B,OAAO,oDAAM,6BAA6B,GAAG;AAChF,KAAK,8BAA8B,OAAO,oDAAM,sBAAsB,GAAG;AACzE,KAAK,8BAA8B,OAAO,oDAAM,uBAAuB,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU,uBAAuB,GAAG,wBAAwB,GAAG,0BAA0B,GAAG,wBAAwB,GAAG,kCAAkC,GAAG;AACjL,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B,WAAW,EA4EV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC,uBAAuB,EAAE;AACzB;AACA,sCAAsC;AACtC;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,EAAE;AAC7B;AACA,oBAAoB,yDAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,+DAAwB,oBAAoB,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG;AACrP,0BAA0B,+DAAwB,EAAE,mGAAmG,6DAA6D,EAAE;AACtN;AACA;AACA,KAAK,yBAAyB;AAC9B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,uBAAuB,OAAO,mDAAK,EAAE;AACrC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,yBAAyB,GAAG,OAAO,wDAAiB,EAAE,GAAG,OAAO,+DAAwB,EAAE,EAAE,EAAE,GAAG;AAChI,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB,WAAW,EA4BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,EAAE;AACzB;AACA,gBAAgB,yDAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,sEAAsE,IAAI,GAAG,MAAM,GAAG;AACtF,yFAAyF,MAAM,KAAK;AACpG,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kHAAkH,QAAQ;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"layout-layout-module-es2015.js","sourcesContent":["import { Injectable, EventEmitter, InjectionToken, Inject, Directive, ElementRef, ChangeDetectorRef, Input, Pipe, NgModule } from '@angular/core';\nimport { of, isObservable, forkJoin, concat, defer } from 'rxjs';\nimport { take, shareReplay, map, concatMap, switchMap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/translate.loader.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nimport * as ɵngcc0 from '@angular/core';\nclass TranslateLoader {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} lang\n     * @return {?}\n     */\n    TranslateLoader.prototype.getTranslation = function (lang) { };\n}\n/**\n * This loader is just a placeholder that does nothing, in case you don't need a loader at all\n */\nclass TranslateFakeLoader extends TranslateLoader {\n    /**\n     * @param {?} lang\n     * @return {?}\n     */\n    getTranslation(lang) {\n        return of({});\n    }\n}\nTranslateFakeLoader.ɵfac = function TranslateFakeLoader_Factory(t) { return ɵTranslateFakeLoader_BaseFactory(t || TranslateFakeLoader); };\nTranslateFakeLoader.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TranslateFakeLoader, factory: TranslateFakeLoader.ɵfac });\nconst ɵTranslateFakeLoader_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TranslateFakeLoader);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TranslateFakeLoader, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/missing-translation-handler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MissingTranslationHandlerParams() { }\nif (false) {\n    /**\n     * the key that's missing in translation files\n     * @type {?}\n     */\n    MissingTranslationHandlerParams.prototype.key;\n    /**\n     * an instance of the service that was unable to translate the key.\n     * @type {?}\n     */\n    MissingTranslationHandlerParams.prototype.translateService;\n    /**\n     * interpolation params that were passed along for translating the given key.\n     * @type {?|undefined}\n     */\n    MissingTranslationHandlerParams.prototype.interpolateParams;\n}\n/**\n * @abstract\n */\nclass MissingTranslationHandler {\n}\nif (false) {\n    /**\n     * A function that handles missing translations.\n     *\n     * @abstract\n     * @param {?} params context for resolving a missing translation\n     * @return {?} a value or an observable\n     * If it returns a value, then this value is used.\n     * If it return an observable, the value returned by this observable will be used (except if the method was \"instant\").\n     * If it doesn't return then the key will be used as a value\n     */\n    MissingTranslationHandler.prototype.handle = function (params) { };\n}\n/**\n * This handler is just a placeholder that does nothing, in case you don't need a missing translation handler at all\n */\nclass FakeMissingTranslationHandler {\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    handle(params) {\n        return params.key;\n    }\n}\nFakeMissingTranslationHandler.ɵfac = function FakeMissingTranslationHandler_Factory(t) { return new (t || FakeMissingTranslationHandler)(); };\nFakeMissingTranslationHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FakeMissingTranslationHandler, factory: FakeMissingTranslationHandler.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FakeMissingTranslationHandler, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/util.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/* tslint:disable */\n/**\n * Determines if two objects or two values are equivalent.\n *\n * Two objects or values are considered equivalent if at least one of the following is true:\n *\n * * Both objects or values pass `===` comparison.\n * * Both objects or values are of the same type and all of their properties are equal by\n *   comparing them with `equals`.\n *\n * @param {?} o1 Object or value to compare.\n * @param {?} o2 Object or value to compare.\n * @return {?} true if arguments are equal.\n */\nfunction equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    // NaN === NaN\n    /** @type {?} */\n    let t1 = typeof o1;\n    /** @type {?} */\n    let t2 = typeof o2;\n    /** @type {?} */\n    let length;\n    /** @type {?} */\n    let key;\n    /** @type {?} */\n    let keySet;\n    if (t1 == t2 && t1 == 'object') {\n        if (Array.isArray(o1)) {\n            if (!Array.isArray(o2))\n                return false;\n            if ((length = o1.length) == o2.length) {\n                for (key = 0; key < length; key++) {\n                    if (!equals(o1[key], o2[key]))\n                        return false;\n                }\n                return true;\n            }\n        }\n        else {\n            if (Array.isArray(o2)) {\n                return false;\n            }\n            keySet = Object.create(null);\n            for (key in o1) {\n                if (!equals(o1[key], o2[key])) {\n                    return false;\n                }\n                keySet[key] = true;\n            }\n            for (key in o2) {\n                if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n}\n/* tslint:enable */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDefined(value) {\n    return typeof value !== 'undefined' && value !== null;\n}\n/**\n * @param {?} item\n * @return {?}\n */\nfunction isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\n/**\n * @param {?} target\n * @param {?} source\n * @return {?}\n */\nfunction mergeDeep(target, source) {\n    /** @type {?} */\n    let output = Object.assign({}, target);\n    if (isObject(target) && isObject(source)) {\n        Object.keys(source).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => {\n            if (isObject(source[key])) {\n                if (!(key in target)) {\n                    Object.assign(output, { [key]: source[key] });\n                }\n                else {\n                    output[key] = mergeDeep(target[key], source[key]);\n                }\n            }\n            else {\n                Object.assign(output, { [key]: source[key] });\n            }\n        }));\n    }\n    return output;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/translate.parser.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass TranslateParser {\n}\nif (false) {\n    /**\n     * Interpolates a string to replace parameters\n     * \"This is a {{ key }}\" ==> \"This is a value\", with params = { key: \"value\" }\n     * @abstract\n     * @param {?} expr\n     * @param {?=} params\n     * @return {?}\n     */\n    TranslateParser.prototype.interpolate = function (expr, params) { };\n    /**\n     * Gets a value from an object by composed key\n     * parser.getValue({ key1: { keyA: 'valueI' }}, 'key1.keyA') ==> 'valueI'\n     * @abstract\n     * @param {?} target\n     * @param {?} key\n     * @return {?}\n     */\n    TranslateParser.prototype.getValue = function (target, key) { };\n}\nclass TranslateDefaultParser extends TranslateParser {\n    constructor() {\n        super(...arguments);\n        this.templateMatcher = /{{\\s?([^{}\\s]*)\\s?}}/g;\n    }\n    /**\n     * @param {?} expr\n     * @param {?=} params\n     * @return {?}\n     */\n    interpolate(expr, params) {\n        /** @type {?} */\n        let result;\n        if (typeof expr === 'string') {\n            result = this.interpolateString(expr, params);\n        }\n        else if (typeof expr === 'function') {\n            result = this.interpolateFunction(expr, params);\n        }\n        else {\n            // this should not happen, but an unrelated TranslateService test depends on it\n            result = (/** @type {?} */ (expr));\n        }\n        return result;\n    }\n    /**\n     * @param {?} target\n     * @param {?} key\n     * @return {?}\n     */\n    getValue(target, key) {\n        /** @type {?} */\n        let keys = typeof key === 'string' ? key.split('.') : [key];\n        key = '';\n        do {\n            key += keys.shift();\n            if (isDefined(target) && isDefined(target[key]) && (typeof target[key] === 'object' || !keys.length)) {\n                target = target[key];\n                key = '';\n            }\n            else if (!keys.length) {\n                target = undefined;\n            }\n            else {\n                key += '.';\n            }\n        } while (keys.length);\n        return target;\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @param {?=} params\n     * @return {?}\n     */\n    interpolateFunction(fn, params) {\n        return fn(params);\n    }\n    /**\n     * @private\n     * @param {?} expr\n     * @param {?=} params\n     * @return {?}\n     */\n    interpolateString(expr, params) {\n        if (!params) {\n            return expr;\n        }\n        return expr.replace(this.templateMatcher, (/**\n         * @param {?} substring\n         * @param {?} b\n         * @return {?}\n         */\n        (substring, b) => {\n            /** @type {?} */\n            let r = this.getValue(params, b);\n            return isDefined(r) ? r : substring;\n        }));\n    }\n}\nTranslateDefaultParser.ɵfac = function TranslateDefaultParser_Factory(t) { return ɵTranslateDefaultParser_BaseFactory(t || TranslateDefaultParser); };\nTranslateDefaultParser.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TranslateDefaultParser, factory: TranslateDefaultParser.ɵfac });\nconst ɵTranslateDefaultParser_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TranslateDefaultParser);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TranslateDefaultParser, [{\n        type: Injectable\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    TranslateDefaultParser.prototype.templateMatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/translate.compiler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass TranslateCompiler {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} value\n     * @param {?} lang\n     * @return {?}\n     */\n    TranslateCompiler.prototype.compile = function (value, lang) { };\n    /**\n     * @abstract\n     * @param {?} translations\n     * @param {?} lang\n     * @return {?}\n     */\n    TranslateCompiler.prototype.compileTranslations = function (translations, lang) { };\n}\n/**\n * This compiler is just a placeholder that does nothing, in case you don't need a compiler at all\n */\nclass TranslateFakeCompiler extends TranslateCompiler {\n    /**\n     * @param {?} value\n     * @param {?} lang\n     * @return {?}\n     */\n    compile(value, lang) {\n        return value;\n    }\n    /**\n     * @param {?} translations\n     * @param {?} lang\n     * @return {?}\n     */\n    compileTranslations(translations, lang) {\n        return translations;\n    }\n}\nTranslateFakeCompiler.ɵfac = function TranslateFakeCompiler_Factory(t) { return ɵTranslateFakeCompiler_BaseFactory(t || TranslateFakeCompiler); };\nTranslateFakeCompiler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TranslateFakeCompiler, factory: TranslateFakeCompiler.ɵfac });\nconst ɵTranslateFakeCompiler_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TranslateFakeCompiler);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TranslateFakeCompiler, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/translate.store.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TranslateStore {\n    constructor() {\n        /**\n         * The lang currently used\n         */\n        this.currentLang = this.defaultLang;\n        /**\n         * a list of translations per lang\n         */\n        this.translations = {};\n        /**\n         * an array of langs\n         */\n        this.langs = [];\n        /**\n         * An EventEmitter to listen to translation change events\n         * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n         *     // do something\n         * });\n         */\n        this.onTranslationChange = new EventEmitter();\n        /**\n         * An EventEmitter to listen to lang change events\n         * onLangChange.subscribe((params: LangChangeEvent) => {\n         *     // do something\n         * });\n         */\n        this.onLangChange = new EventEmitter();\n        /**\n         * An EventEmitter to listen to default lang change events\n         * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n         *     // do something\n         * });\n         */\n        this.onDefaultLangChange = new EventEmitter();\n    }\n}\nif (false) {\n    /**\n     * The default lang to fallback when translations are missing on the current lang\n     * @type {?}\n     */\n    TranslateStore.prototype.defaultLang;\n    /**\n     * The lang currently used\n     * @type {?}\n     */\n    TranslateStore.prototype.currentLang;\n    /**\n     * a list of translations per lang\n     * @type {?}\n     */\n    TranslateStore.prototype.translations;\n    /**\n     * an array of langs\n     * @type {?}\n     */\n    TranslateStore.prototype.langs;\n    /**\n     * An EventEmitter to listen to translation change events\n     * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n     * @type {?}\n     */\n    TranslateStore.prototype.onTranslationChange;\n    /**\n     * An EventEmitter to listen to lang change events\n     * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n     * @type {?}\n     */\n    TranslateStore.prototype.onLangChange;\n    /**\n     * An EventEmitter to listen to default lang change events\n     * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n     * @type {?}\n     */\n    TranslateStore.prototype.onDefaultLangChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/translate.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst USE_STORE = new InjectionToken('USE_STORE');\n/** @type {?} */\nconst USE_DEFAULT_LANG = new InjectionToken('USE_DEFAULT_LANG');\n/** @type {?} */\nconst DEFAULT_LANGUAGE = new InjectionToken('DEFAULT_LANGUAGE');\n/** @type {?} */\nconst USE_EXTEND = new InjectionToken('USE_EXTEND');\n/**\n * @record\n */\nfunction TranslationChangeEvent() { }\nif (false) {\n    /** @type {?} */\n    TranslationChangeEvent.prototype.translations;\n    /** @type {?} */\n    TranslationChangeEvent.prototype.lang;\n}\n/**\n * @record\n */\nfunction LangChangeEvent() { }\nif (false) {\n    /** @type {?} */\n    LangChangeEvent.prototype.lang;\n    /** @type {?} */\n    LangChangeEvent.prototype.translations;\n}\n/**\n * @record\n */\nfunction DefaultLangChangeEvent() { }\nif (false) {\n    /** @type {?} */\n    DefaultLangChangeEvent.prototype.lang;\n    /** @type {?} */\n    DefaultLangChangeEvent.prototype.translations;\n}\nclass TranslateService {\n    /**\n     *\n     * @param {?} store an instance of the store (that is supposed to be unique)\n     * @param {?} currentLoader An instance of the loader currently used\n     * @param {?} compiler An instance of the compiler currently used\n     * @param {?} parser An instance of the parser currently used\n     * @param {?} missingTranslationHandler A handler for missing translations.\n     * @param {?=} useDefaultLang whether we should use default language translation when current language translation is missing.\n     * @param {?=} isolate whether this service should use the store or not\n     * @param {?=} extend To make a child module extend (and use) translations from parent modules.\n     * @param {?=} defaultLanguage Set the default language using configuration\n     */\n    constructor(store, currentLoader, compiler, parser, missingTranslationHandler, useDefaultLang = true, isolate = false, extend = false, defaultLanguage) {\n        this.store = store;\n        this.currentLoader = currentLoader;\n        this.compiler = compiler;\n        this.parser = parser;\n        this.missingTranslationHandler = missingTranslationHandler;\n        this.useDefaultLang = useDefaultLang;\n        this.isolate = isolate;\n        this.extend = extend;\n        this.pending = false;\n        this._onTranslationChange = new EventEmitter();\n        this._onLangChange = new EventEmitter();\n        this._onDefaultLangChange = new EventEmitter();\n        this._langs = [];\n        this._translations = {};\n        this._translationRequests = {};\n        /** set the default language from configuration */\n        if (defaultLanguage) {\n            this.setDefaultLang(defaultLanguage);\n        }\n    }\n    /**\n     * An EventEmitter to listen to translation change events\n     * onTranslationChange.subscribe((params: TranslationChangeEvent) => {\n     *     // do something\n     * });\n     * @return {?}\n     */\n    get onTranslationChange() {\n        return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;\n    }\n    /**\n     * An EventEmitter to listen to lang change events\n     * onLangChange.subscribe((params: LangChangeEvent) => {\n     *     // do something\n     * });\n     * @return {?}\n     */\n    get onLangChange() {\n        return this.isolate ? this._onLangChange : this.store.onLangChange;\n    }\n    /**\n     * An EventEmitter to listen to default lang change events\n     * onDefaultLangChange.subscribe((params: DefaultLangChangeEvent) => {\n     *     // do something\n     * });\n     * @return {?}\n     */\n    get onDefaultLangChange() {\n        return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;\n    }\n    /**\n     * The default lang to fallback when translations are missing on the current lang\n     * @return {?}\n     */\n    get defaultLang() {\n        return this.isolate ? this._defaultLang : this.store.defaultLang;\n    }\n    /**\n     * @param {?} defaultLang\n     * @return {?}\n     */\n    set defaultLang(defaultLang) {\n        if (this.isolate) {\n            this._defaultLang = defaultLang;\n        }\n        else {\n            this.store.defaultLang = defaultLang;\n        }\n    }\n    /**\n     * The lang currently used\n     * @return {?}\n     */\n    get currentLang() {\n        return this.isolate ? this._currentLang : this.store.currentLang;\n    }\n    /**\n     * @param {?} currentLang\n     * @return {?}\n     */\n    set currentLang(currentLang) {\n        if (this.isolate) {\n            this._currentLang = currentLang;\n        }\n        else {\n            this.store.currentLang = currentLang;\n        }\n    }\n    /**\n     * an array of langs\n     * @return {?}\n     */\n    get langs() {\n        return this.isolate ? this._langs : this.store.langs;\n    }\n    /**\n     * @param {?} langs\n     * @return {?}\n     */\n    set langs(langs) {\n        if (this.isolate) {\n            this._langs = langs;\n        }\n        else {\n            this.store.langs = langs;\n        }\n    }\n    /**\n     * a list of translations per lang\n     * @return {?}\n     */\n    get translations() {\n        return this.isolate ? this._translations : this.store.translations;\n    }\n    /**\n     * @param {?} translations\n     * @return {?}\n     */\n    set translations(translations) {\n        if (this.isolate) {\n            this._translations = translations;\n        }\n        else {\n            this.store.translations = translations;\n        }\n    }\n    /**\n     * Sets the default language to use as a fallback\n     * @param {?} lang\n     * @return {?}\n     */\n    setDefaultLang(lang) {\n        if (lang === this.defaultLang) {\n            return;\n        }\n        /** @type {?} */\n        let pending = this.retrieveTranslations(lang);\n        if (typeof pending !== \"undefined\") {\n            // on init set the defaultLang immediately\n            if (this.defaultLang == null) {\n                this.defaultLang = lang;\n            }\n            pending.pipe(take(1))\n                .subscribe((/**\n             * @param {?} res\n             * @return {?}\n             */\n            (res) => {\n                this.changeDefaultLang(lang);\n            }));\n        }\n        else { // we already have this language\n            this.changeDefaultLang(lang);\n        }\n    }\n    /**\n     * Gets the default language used\n     * @return {?}\n     */\n    getDefaultLang() {\n        return this.defaultLang;\n    }\n    /**\n     * Changes the lang currently used\n     * @param {?} lang\n     * @return {?}\n     */\n    use(lang) {\n        // don't change the language if the language given is already selected\n        if (lang === this.currentLang) {\n            return of(this.translations[lang]);\n        }\n        /** @type {?} */\n        let pending = this.retrieveTranslations(lang);\n        if (typeof pending !== \"undefined\") {\n            // on init set the currentLang immediately\n            if (!this.currentLang) {\n                this.currentLang = lang;\n            }\n            pending.pipe(take(1))\n                .subscribe((/**\n             * @param {?} res\n             * @return {?}\n             */\n            (res) => {\n                this.changeLang(lang);\n            }));\n            return pending;\n        }\n        else { // we have this language, return an Observable\n            this.changeLang(lang);\n            return of(this.translations[lang]);\n        }\n    }\n    /**\n     * Retrieves the given translations\n     * @private\n     * @param {?} lang\n     * @return {?}\n     */\n    retrieveTranslations(lang) {\n        /** @type {?} */\n        let pending;\n        // if this language is unavailable or extend is true, ask for it\n        if (typeof this.translations[lang] === \"undefined\" || this.extend) {\n            this._translationRequests[lang] = this._translationRequests[lang] || this.getTranslation(lang);\n            pending = this._translationRequests[lang];\n        }\n        return pending;\n    }\n    /**\n     * Gets an object of translations for a given language with the current loader\n     * and passes it through the compiler\n     * @param {?} lang\n     * @return {?}\n     */\n    getTranslation(lang) {\n        this.pending = true;\n        /** @type {?} */\n        const loadingTranslations = this.currentLoader.getTranslation(lang).pipe(shareReplay(1), take(1));\n        this.loadingTranslations = loadingTranslations.pipe(map((/**\n         * @param {?} res\n         * @return {?}\n         */\n        (res) => this.compiler.compileTranslations(res, lang))), shareReplay(1), take(1));\n        this.loadingTranslations\n            .subscribe({\n            next: (/**\n             * @param {?} res\n             * @return {?}\n             */\n            (res) => {\n                this.translations[lang] = this.extend && this.translations[lang] ? Object.assign(Object.assign({}, res), this.translations[lang]) : res;\n                this.updateLangs();\n                this.pending = false;\n            }),\n            error: (/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                this.pending = false;\n            })\n        });\n        return loadingTranslations;\n    }\n    /**\n     * Manually sets an object of translations for a given language\n     * after passing it through the compiler\n     * @param {?} lang\n     * @param {?} translations\n     * @param {?=} shouldMerge\n     * @return {?}\n     */\n    setTranslation(lang, translations, shouldMerge = false) {\n        translations = this.compiler.compileTranslations(translations, lang);\n        if ((shouldMerge || this.extend) && this.translations[lang]) {\n            this.translations[lang] = mergeDeep(this.translations[lang], translations);\n        }\n        else {\n            this.translations[lang] = translations;\n        }\n        this.updateLangs();\n        this.onTranslationChange.emit({ lang: lang, translations: this.translations[lang] });\n    }\n    /**\n     * Returns an array of currently available langs\n     * @return {?}\n     */\n    getLangs() {\n        return this.langs;\n    }\n    /**\n     * Add available langs\n     * @param {?} langs\n     * @return {?}\n     */\n    addLangs(langs) {\n        langs.forEach((/**\n         * @param {?} lang\n         * @return {?}\n         */\n        (lang) => {\n            if (this.langs.indexOf(lang) === -1) {\n                this.langs.push(lang);\n            }\n        }));\n    }\n    /**\n     * Update the list of available langs\n     * @private\n     * @return {?}\n     */\n    updateLangs() {\n        this.addLangs(Object.keys(this.translations));\n    }\n    /**\n     * Returns the parsed result of the translations\n     * @param {?} translations\n     * @param {?} key\n     * @param {?=} interpolateParams\n     * @return {?}\n     */\n    getParsedResult(translations, key, interpolateParams) {\n        /** @type {?} */\n        let res;\n        if (key instanceof Array) {\n            /** @type {?} */\n            let result = {};\n            /** @type {?} */\n            let observables = false;\n            for (let k of key) {\n                result[k] = this.getParsedResult(translations, k, interpolateParams);\n                if (isObservable(result[k])) {\n                    observables = true;\n                }\n            }\n            if (observables) {\n                /** @type {?} */\n                const sources = key.map((/**\n                 * @param {?} k\n                 * @return {?}\n                 */\n                k => isObservable(result[k]) ? result[k] : of((/** @type {?} */ (result[k])))));\n                return forkJoin(sources).pipe(map((/**\n                 * @param {?} arr\n                 * @return {?}\n                 */\n                (arr) => {\n                    /** @type {?} */\n                    let obj = {};\n                    arr.forEach((/**\n                     * @param {?} value\n                     * @param {?} index\n                     * @return {?}\n                     */\n                    (value, index) => {\n                        obj[key[index]] = value;\n                    }));\n                    return obj;\n                })));\n            }\n            return result;\n        }\n        if (translations) {\n            res = this.parser.interpolate(this.parser.getValue(translations, key), interpolateParams);\n        }\n        if (typeof res === \"undefined\" && this.defaultLang != null && this.defaultLang !== this.currentLang && this.useDefaultLang) {\n            res = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], key), interpolateParams);\n        }\n        if (typeof res === \"undefined\") {\n            /** @type {?} */\n            let params = { key, translateService: this };\n            if (typeof interpolateParams !== 'undefined') {\n                params.interpolateParams = interpolateParams;\n            }\n            res = this.missingTranslationHandler.handle(params);\n        }\n        return typeof res !== \"undefined\" ? res : key;\n    }\n    /**\n     * Gets the translated value of a key (or an array of keys)\n     * @param {?} key\n     * @param {?=} interpolateParams\n     * @return {?} the translated key, or an object of translated keys\n     */\n    get(key, interpolateParams) {\n        if (!isDefined(key) || !key.length) {\n            throw new Error(`Parameter \"key\" required`);\n        }\n        // check if we are loading a new translation to use\n        if (this.pending) {\n            return this.loadingTranslations.pipe(concatMap((/**\n             * @param {?} res\n             * @return {?}\n             */\n            (res) => {\n                res = this.getParsedResult(res, key, interpolateParams);\n                return isObservable(res) ? res : of(res);\n            })));\n        }\n        else {\n            /** @type {?} */\n            let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n            return isObservable(res) ? res : of(res);\n        }\n    }\n    /**\n     * Returns a stream of translated values of a key (or an array of keys) which updates\n     * whenever the translation changes.\n     * @param {?} key\n     * @param {?=} interpolateParams\n     * @return {?} A stream of the translated key, or an object of translated keys\n     */\n    getStreamOnTranslationChange(key, interpolateParams) {\n        if (!isDefined(key) || !key.length) {\n            throw new Error(`Parameter \"key\" required`);\n        }\n        return concat(defer((/**\n         * @return {?}\n         */\n        () => this.get(key, interpolateParams))), this.onTranslationChange.pipe(switchMap((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const res = this.getParsedResult(event.translations, key, interpolateParams);\n            if (typeof res.subscribe === 'function') {\n                return res;\n            }\n            else {\n                return of(res);\n            }\n        }))));\n    }\n    /**\n     * Returns a stream of translated values of a key (or an array of keys) which updates\n     * whenever the language changes.\n     * @param {?} key\n     * @param {?=} interpolateParams\n     * @return {?} A stream of the translated key, or an object of translated keys\n     */\n    stream(key, interpolateParams) {\n        if (!isDefined(key) || !key.length) {\n            throw new Error(`Parameter \"key\" required`);\n        }\n        return concat(defer((/**\n         * @return {?}\n         */\n        () => this.get(key, interpolateParams))), this.onLangChange.pipe(switchMap((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const res = this.getParsedResult(event.translations, key, interpolateParams);\n            return isObservable(res) ? res : of(res);\n        }))));\n    }\n    /**\n     * Returns a translation instantly from the internal state of loaded translation.\n     * All rules regarding the current language, the preferred language of even fallback languages will be used except any promise handling.\n     * @param {?} key\n     * @param {?=} interpolateParams\n     * @return {?}\n     */\n    instant(key, interpolateParams) {\n        if (!isDefined(key) || !key.length) {\n            throw new Error(`Parameter \"key\" required`);\n        }\n        /** @type {?} */\n        let res = this.getParsedResult(this.translations[this.currentLang], key, interpolateParams);\n        if (isObservable(res)) {\n            if (key instanceof Array) {\n                /** @type {?} */\n                let obj = {};\n                key.forEach((/**\n                 * @param {?} value\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (value, index) => {\n                    obj[key[index]] = key[index];\n                }));\n                return obj;\n            }\n            return key;\n        }\n        else {\n            return res;\n        }\n    }\n    /**\n     * Sets the translated value of a key, after compiling it\n     * @param {?} key\n     * @param {?} value\n     * @param {?=} lang\n     * @return {?}\n     */\n    set(key, value, lang = this.currentLang) {\n        this.translations[lang][key] = this.compiler.compile(value, lang);\n        this.updateLangs();\n        this.onTranslationChange.emit({ lang: lang, translations: this.translations[lang] });\n    }\n    /**\n     * Changes the current lang\n     * @private\n     * @param {?} lang\n     * @return {?}\n     */\n    changeLang(lang) {\n        this.currentLang = lang;\n        this.onLangChange.emit({ lang: lang, translations: this.translations[lang] });\n        // if there is no default lang, use the one that we just set\n        if (this.defaultLang == null) {\n            this.changeDefaultLang(lang);\n        }\n    }\n    /**\n     * Changes the default lang\n     * @private\n     * @param {?} lang\n     * @return {?}\n     */\n    changeDefaultLang(lang) {\n        this.defaultLang = lang;\n        this.onDefaultLangChange.emit({ lang: lang, translations: this.translations[lang] });\n    }\n    /**\n     * Allows to reload the lang file from the file\n     * @param {?} lang\n     * @return {?}\n     */\n    reloadLang(lang) {\n        this.resetLang(lang);\n        return this.getTranslation(lang);\n    }\n    /**\n     * Deletes inner translation\n     * @param {?} lang\n     * @return {?}\n     */\n    resetLang(lang) {\n        this._translationRequests[lang] = undefined;\n        this.translations[lang] = undefined;\n    }\n    /**\n     * Returns the language code name from the browser, e.g. \"de\"\n     * @return {?}\n     */\n    getBrowserLang() {\n        if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n            return undefined;\n        }\n        /** @type {?} */\n        let browserLang = window.navigator.languages ? window.navigator.languages[0] : null;\n        browserLang = browserLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n        if (typeof browserLang === 'undefined') {\n            return undefined;\n        }\n        if (browserLang.indexOf('-') !== -1) {\n            browserLang = browserLang.split('-')[0];\n        }\n        if (browserLang.indexOf('_') !== -1) {\n            browserLang = browserLang.split('_')[0];\n        }\n        return browserLang;\n    }\n    /**\n     * Returns the culture language code name from the browser, e.g. \"de-DE\"\n     * @return {?}\n     */\n    getBrowserCultureLang() {\n        if (typeof window === 'undefined' || typeof window.navigator === 'undefined') {\n            return undefined;\n        }\n        /** @type {?} */\n        let browserCultureLang = window.navigator.languages ? window.navigator.languages[0] : null;\n        browserCultureLang = browserCultureLang || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage;\n        return browserCultureLang;\n    }\n}\nTranslateService.ɵfac = function TranslateService_Factory(t) { return new (t || TranslateService)(ɵngcc0.ɵɵinject(TranslateStore), ɵngcc0.ɵɵinject(TranslateLoader), ɵngcc0.ɵɵinject(TranslateCompiler), ɵngcc0.ɵɵinject(TranslateParser), ɵngcc0.ɵɵinject(MissingTranslationHandler), ɵngcc0.ɵɵinject(USE_DEFAULT_LANG), ɵngcc0.ɵɵinject(USE_STORE), ɵngcc0.ɵɵinject(USE_EXTEND), ɵngcc0.ɵɵinject(DEFAULT_LANGUAGE)); };\nTranslateService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TranslateService, factory: TranslateService.ɵfac });\n/** @nocollapse */\nTranslateService.ctorParameters = () => [\n    { type: TranslateStore },\n    { type: TranslateLoader },\n    { type: TranslateCompiler },\n    { type: TranslateParser },\n    { type: MissingTranslationHandler },\n    { type: Boolean, decorators: [{ type: Inject, args: [USE_DEFAULT_LANG,] }] },\n    { type: Boolean, decorators: [{ type: Inject, args: [USE_STORE,] }] },\n    { type: Boolean, decorators: [{ type: Inject, args: [USE_EXTEND,] }] },\n    { type: String, decorators: [{ type: Inject, args: [DEFAULT_LANGUAGE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TranslateService, [{\n        type: Injectable\n    }], function () { return [{ type: TranslateStore }, { type: TranslateLoader }, { type: TranslateCompiler }, { type: TranslateParser }, { type: MissingTranslationHandler }, { type: Boolean, decorators: [{\n                type: Inject,\n                args: [USE_DEFAULT_LANG]\n            }] }, { type: Boolean, decorators: [{\n                type: Inject,\n                args: [USE_STORE]\n            }] }, { type: Boolean, decorators: [{\n                type: Inject,\n                args: [USE_EXTEND]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [DEFAULT_LANGUAGE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype.loadingTranslations;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype.pending;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype._onTranslationChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype._onLangChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype._onDefaultLangChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype._defaultLang;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype._currentLang;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype._langs;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype._translations;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype._translationRequests;\n    /** @type {?} */\n    TranslateService.prototype.store;\n    /** @type {?} */\n    TranslateService.prototype.currentLoader;\n    /** @type {?} */\n    TranslateService.prototype.compiler;\n    /** @type {?} */\n    TranslateService.prototype.parser;\n    /** @type {?} */\n    TranslateService.prototype.missingTranslationHandler;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype.useDefaultLang;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype.isolate;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateService.prototype.extend;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/translate.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TranslateDirective {\n    /**\n     * @param {?} translateService\n     * @param {?} element\n     * @param {?} _ref\n     */\n    constructor(translateService, element, _ref) {\n        this.translateService = translateService;\n        this.element = element;\n        this._ref = _ref;\n        // subscribe to onTranslationChange event, in case the translations of the current lang change\n        if (!this.onTranslationChangeSub) {\n            this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                if (event.lang === this.translateService.currentLang) {\n                    this.checkNodes(true, event.translations);\n                }\n            }));\n        }\n        // subscribe to onLangChange event, in case the language changes\n        if (!this.onLangChangeSub) {\n            this.onLangChangeSub = this.translateService.onLangChange.subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                this.checkNodes(true, event.translations);\n            }));\n        }\n        // subscribe to onDefaultLangChange event, in case the default language changes\n        if (!this.onDefaultLangChangeSub) {\n            this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                this.checkNodes(true);\n            }));\n        }\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    set translate(key) {\n        if (key) {\n            this.key = key;\n            this.checkNodes();\n        }\n    }\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    set translateParams(params) {\n        if (!equals(this.currentParams, params)) {\n            this.currentParams = params;\n            this.checkNodes(true);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        this.checkNodes();\n    }\n    /**\n     * @param {?=} forceUpdate\n     * @param {?=} translations\n     * @return {?}\n     */\n    checkNodes(forceUpdate = false, translations) {\n        /** @type {?} */\n        let nodes = this.element.nativeElement.childNodes;\n        // if the element is empty\n        if (!nodes.length) {\n            // we add the key as content\n            this.setContent(this.element.nativeElement, this.key);\n            nodes = this.element.nativeElement.childNodes;\n        }\n        for (let i = 0; i < nodes.length; ++i) {\n            /** @type {?} */\n            let node = nodes[i];\n            if (node.nodeType === 3) { // node type 3 is a text node\n                // node type 3 is a text node\n                /** @type {?} */\n                let key;\n                if (forceUpdate) {\n                    node.lastKey = null;\n                }\n                if (isDefined(node.lookupKey)) {\n                    key = node.lookupKey;\n                }\n                else if (this.key) {\n                    key = this.key;\n                }\n                else {\n                    /** @type {?} */\n                    let content = this.getContent(node);\n                    /** @type {?} */\n                    let trimmedContent = content.trim();\n                    if (trimmedContent.length) {\n                        node.lookupKey = trimmedContent;\n                        // we want to use the content as a key, not the translation value\n                        if (content !== node.currentValue) {\n                            key = trimmedContent;\n                            // the content was changed from the user, we'll use it as a reference if needed\n                            node.originalContent = content || node.originalContent;\n                        }\n                        else if (node.originalContent) { // the content seems ok, but the lang has changed\n                            // the current content is the translation, not the key, use the last real content as key\n                            key = node.originalContent.trim();\n                        }\n                        else if (content !== node.currentValue) {\n                            // we want to use the content as a key, not the translation value\n                            key = trimmedContent;\n                            // the content was changed from the user, we'll use it as a reference if needed\n                            node.originalContent = content || node.originalContent;\n                        }\n                    }\n                }\n                this.updateValue(key, node, translations);\n            }\n        }\n    }\n    /**\n     * @param {?} key\n     * @param {?} node\n     * @param {?} translations\n     * @return {?}\n     */\n    updateValue(key, node, translations) {\n        if (key) {\n            if (node.lastKey === key && this.lastParams === this.currentParams) {\n                return;\n            }\n            this.lastParams = this.currentParams;\n            /** @type {?} */\n            let onTranslation = (/**\n             * @param {?} res\n             * @return {?}\n             */\n            (res) => {\n                if (res !== key) {\n                    node.lastKey = key;\n                }\n                if (!node.originalContent) {\n                    node.originalContent = this.getContent(node);\n                }\n                node.currentValue = isDefined(res) ? res : (node.originalContent || key);\n                // we replace in the original content to preserve spaces that we might have trimmed\n                this.setContent(node, this.key ? node.currentValue : node.originalContent.replace(key, node.currentValue));\n                this._ref.markForCheck();\n            });\n            if (isDefined(translations)) {\n                /** @type {?} */\n                let res = this.translateService.getParsedResult(translations, key, this.currentParams);\n                if (isObservable(res)) {\n                    res.subscribe(onTranslation);\n                }\n                else {\n                    onTranslation(res);\n                }\n            }\n            else {\n                this.translateService.get(key, this.currentParams).subscribe(onTranslation);\n            }\n        }\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    getContent(node) {\n        return isDefined(node.textContent) ? node.textContent : node.data;\n    }\n    /**\n     * @param {?} node\n     * @param {?} content\n     * @return {?}\n     */\n    setContent(node, content) {\n        if (isDefined(node.textContent)) {\n            node.textContent = content;\n        }\n        else {\n            node.data = content;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.onLangChangeSub) {\n            this.onLangChangeSub.unsubscribe();\n        }\n        if (this.onDefaultLangChangeSub) {\n            this.onDefaultLangChangeSub.unsubscribe();\n        }\n        if (this.onTranslationChangeSub) {\n            this.onTranslationChangeSub.unsubscribe();\n        }\n    }\n}\nTranslateDirective.ɵfac = function TranslateDirective_Factory(t) { return new (t || TranslateDirective)(ɵngcc0.ɵɵdirectiveInject(TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nTranslateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TranslateDirective, selectors: [[\"\", \"translate\", \"\"], [\"\", \"ngx-translate\", \"\"]], inputs: { translate: \"translate\", translateParams: \"translateParams\" } });\n/** @nocollapse */\nTranslateDirective.ctorParameters = () => [\n    { type: TranslateService },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nTranslateDirective.propDecorators = {\n    translate: [{ type: Input }],\n    translateParams: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TranslateDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[translate],[ngx-translate]'\n            }]\n    }], function () { return [{ type: TranslateService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { translate: [{\n            type: Input\n        }], translateParams: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    TranslateDirective.prototype.key;\n    /** @type {?} */\n    TranslateDirective.prototype.lastParams;\n    /** @type {?} */\n    TranslateDirective.prototype.currentParams;\n    /** @type {?} */\n    TranslateDirective.prototype.onLangChangeSub;\n    /** @type {?} */\n    TranslateDirective.prototype.onDefaultLangChangeSub;\n    /** @type {?} */\n    TranslateDirective.prototype.onTranslationChangeSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateDirective.prototype.translateService;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslateDirective.prototype._ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/translate.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TranslatePipe {\n    /**\n     * @param {?} translate\n     * @param {?} _ref\n     */\n    constructor(translate, _ref) {\n        this.translate = translate;\n        this._ref = _ref;\n        this.value = '';\n    }\n    /**\n     * @param {?} key\n     * @param {?=} interpolateParams\n     * @param {?=} translations\n     * @return {?}\n     */\n    updateValue(key, interpolateParams, translations) {\n        /** @type {?} */\n        let onTranslation = (/**\n         * @param {?} res\n         * @return {?}\n         */\n        (res) => {\n            this.value = res !== undefined ? res : key;\n            this.lastKey = key;\n            this._ref.markForCheck();\n        });\n        if (translations) {\n            /** @type {?} */\n            let res = this.translate.getParsedResult(translations, key, interpolateParams);\n            if (isObservable(res.subscribe)) {\n                res.subscribe(onTranslation);\n            }\n            else {\n                onTranslation(res);\n            }\n        }\n        this.translate.get(key, interpolateParams).subscribe(onTranslation);\n    }\n    /**\n     * @param {?} query\n     * @param {...?} args\n     * @return {?}\n     */\n    transform(query, ...args) {\n        if (!query || !query.length) {\n            return query;\n        }\n        // if we ask another time for the same key, return the last value\n        if (equals(query, this.lastKey) && equals(args, this.lastParams)) {\n            return this.value;\n        }\n        /** @type {?} */\n        let interpolateParams;\n        if (isDefined(args[0]) && args.length) {\n            if (typeof args[0] === 'string' && args[0].length) {\n                // we accept objects written in the template such as {n:1}, {'n':1}, {n:'v'}\n                // which is why we might need to change it to real JSON objects such as {\"n\":1} or {\"n\":\"v\"}\n                /** @type {?} */\n                let validArgs = args[0]\n                    .replace(/(\\')?([a-zA-Z0-9_]+)(\\')?(\\s)?:/g, '\"$2\":')\n                    .replace(/:(\\s)?(\\')(.*?)(\\')/g, ':\"$3\"');\n                try {\n                    interpolateParams = JSON.parse(validArgs);\n                }\n                catch (e) {\n                    throw new SyntaxError(`Wrong parameter in TranslatePipe. Expected a valid Object, received: ${args[0]}`);\n                }\n            }\n            else if (typeof args[0] === 'object' && !Array.isArray(args[0])) {\n                interpolateParams = args[0];\n            }\n        }\n        // store the query, in case it changes\n        this.lastKey = query;\n        // store the params, in case they change\n        this.lastParams = args;\n        // set the value\n        this.updateValue(query, interpolateParams);\n        // if there is a subscription to onLangChange, clean it\n        this._dispose();\n        // subscribe to onTranslationChange event, in case the translations change\n        if (!this.onTranslationChange) {\n            this.onTranslationChange = this.translate.onTranslationChange.subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                if (this.lastKey && event.lang === this.translate.currentLang) {\n                    this.lastKey = null;\n                    this.updateValue(query, interpolateParams, event.translations);\n                }\n            }));\n        }\n        // subscribe to onLangChange event, in case the language changes\n        if (!this.onLangChange) {\n            this.onLangChange = this.translate.onLangChange.subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                if (this.lastKey) {\n                    this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n                    this.updateValue(query, interpolateParams, event.translations);\n                }\n            }));\n        }\n        // subscribe to onDefaultLangChange event, in case the default language changes\n        if (!this.onDefaultLangChange) {\n            this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this.lastKey) {\n                    this.lastKey = null; // we want to make sure it doesn't return the same value until it's been updated\n                    this.updateValue(query, interpolateParams);\n                }\n            }));\n        }\n        return this.value;\n    }\n    /**\n     * Clean any existing subscription to change events\n     * @private\n     * @return {?}\n     */\n    _dispose() {\n        if (typeof this.onTranslationChange !== 'undefined') {\n            this.onTranslationChange.unsubscribe();\n            this.onTranslationChange = undefined;\n        }\n        if (typeof this.onLangChange !== 'undefined') {\n            this.onLangChange.unsubscribe();\n            this.onLangChange = undefined;\n        }\n        if (typeof this.onDefaultLangChange !== 'undefined') {\n            this.onDefaultLangChange.unsubscribe();\n            this.onDefaultLangChange = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dispose();\n    }\n}\nTranslatePipe.ɵfac = function TranslatePipe_Factory(t) { return new (t || TranslatePipe)(ɵngcc0.ɵɵdirectiveInject(TranslateService), ɵngcc0.ɵɵinjectPipeChangeDetectorRef()); };\nTranslatePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"translate\", type: TranslatePipe, pure: false });\nTranslatePipe.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TranslatePipe, factory: TranslatePipe.ɵfac });\n/** @nocollapse */\nTranslatePipe.ctorParameters = () => [\n    { type: TranslateService },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TranslatePipe, [{\n        type: Injectable\n    }, {\n        type: Pipe,\n        args: [{\n                name: 'translate',\n                pure: false // required to update the value when the promise is resolved\n            }]\n    }], function () { return [{ type: TranslateService }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    TranslatePipe.prototype.value;\n    /** @type {?} */\n    TranslatePipe.prototype.lastKey;\n    /** @type {?} */\n    TranslatePipe.prototype.lastParams;\n    /** @type {?} */\n    TranslatePipe.prototype.onTranslationChange;\n    /** @type {?} */\n    TranslatePipe.prototype.onLangChange;\n    /** @type {?} */\n    TranslatePipe.prototype.onDefaultLangChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslatePipe.prototype.translate;\n    /**\n     * @type {?}\n     * @private\n     */\n    TranslatePipe.prototype._ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction TranslateModuleConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    TranslateModuleConfig.prototype.loader;\n    /** @type {?|undefined} */\n    TranslateModuleConfig.prototype.compiler;\n    /** @type {?|undefined} */\n    TranslateModuleConfig.prototype.parser;\n    /** @type {?|undefined} */\n    TranslateModuleConfig.prototype.missingTranslationHandler;\n    /** @type {?|undefined} */\n    TranslateModuleConfig.prototype.isolate;\n    /** @type {?|undefined} */\n    TranslateModuleConfig.prototype.extend;\n    /** @type {?|undefined} */\n    TranslateModuleConfig.prototype.useDefaultLang;\n    /** @type {?|undefined} */\n    TranslateModuleConfig.prototype.defaultLanguage;\n}\nclass TranslateModule {\n    /**\n     * Use this method in your root module to provide the TranslateService\n     * @param {?=} config\n     * @return {?}\n     */\n    static forRoot(config = {}) {\n        return {\n            ngModule: TranslateModule,\n            providers: [\n                config.loader || { provide: TranslateLoader, useClass: TranslateFakeLoader },\n                config.compiler || { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n                config.parser || { provide: TranslateParser, useClass: TranslateDefaultParser },\n                config.missingTranslationHandler || { provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler },\n                TranslateStore,\n                { provide: USE_STORE, useValue: config.isolate },\n                { provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang },\n                { provide: USE_EXTEND, useValue: config.extend },\n                { provide: DEFAULT_LANGUAGE, useValue: config.defaultLanguage },\n                TranslateService\n            ]\n        };\n    }\n    /**\n     * Use this method in your other (non root) modules to import the directive/pipe\n     * @param {?=} config\n     * @return {?}\n     */\n    static forChild(config = {}) {\n        return {\n            ngModule: TranslateModule,\n            providers: [\n                config.loader || { provide: TranslateLoader, useClass: TranslateFakeLoader },\n                config.compiler || { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n                config.parser || { provide: TranslateParser, useClass: TranslateDefaultParser },\n                config.missingTranslationHandler || { provide: MissingTranslationHandler, useClass: FakeMissingTranslationHandler },\n                { provide: USE_STORE, useValue: config.isolate },\n                { provide: USE_DEFAULT_LANG, useValue: config.useDefaultLang },\n                { provide: USE_EXTEND, useValue: config.extend },\n                { provide: DEFAULT_LANGUAGE, useValue: config.defaultLanguage },\n                TranslateService\n            ]\n        };\n    }\n}\nTranslateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TranslateModule });\nTranslateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TranslateModule_Factory(t) { return new (t || TranslateModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TranslateModule, { declarations: [TranslatePipe, TranslateDirective], exports: [TranslatePipe, TranslateDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TranslateModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    TranslatePipe,\n                    TranslateDirective\n                ],\n                exports: [\n                    TranslatePipe,\n                    TranslateDirective\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-translate-core.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DEFAULT_LANGUAGE, FakeMissingTranslationHandler, MissingTranslationHandler, TranslateCompiler, TranslateDefaultParser, TranslateDirective, TranslateFakeCompiler, TranslateFakeLoader, TranslateLoader, TranslateModule, TranslateParser, TranslatePipe, TranslateService, TranslateStore, USE_DEFAULT_LANG, USE_EXTEND, USE_STORE };\n\n//# sourceMappingURL=ngx-translate-core.js.map","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n    selector: 'app-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n    constructor(public route: ActivatedRoute, private router: Router) { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div [@routerTransition]>\n    <router-outlet></router-outlet>\n <div *ngIf=\"route.children.length === 0\">\n    <app-page-header [heading]=\"'Services'\" [icon]=\"'fa-settings'\"></app-page-header>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div class=\"card mb-3\">\n                <div class=\"card-header\">\n                    <alert></alert>\n                    Services : {{services_data?.length}}\n<!--                     <li *ngFor=\"let obj of categories.data\">{{obj | json}}</li> -->\n                    <button style=\"text-align: right\" (click)=\"add()\" class=\"btn btn-success\"> Add</button>                 \n                </div>\n                <div class=\"card-body table-responsive\">\n                    <table class=\"table\">\n                        <thead>\n                        <tr> \n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Description</th>\n                            <th>Service Category</th>\n                            <th>Modified On </th>\n                            <th>Action</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <!-- <tr *ngFor=\"let val of services_data;let rank = index; \" >\n                                <td scope=\"row\">{{rank+1}} </td>\n                                <td style=\"color: green;font-weight: bold\">{{val.serviceName}}</td>\n                                <td style=\"color: green;font-weight: bold\">{{val.description}}</td>\n                                <td  style=\"color: blue;font-weight: bold\">{{ getCategoryName(val.categoryServiceId,categories) }}  </td>\n                                <td style=\"color: blue;font-weight: bold\"> {{val.create_date | date}}</td>\n                                <td> <button (click)=\"edit(val._id)\" style=\"margin-right: 20px;\" class=\"btn btn-info\"> Edit</button>  <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(val._id)\"  >Delete</button></td>\n                        </tr> -->\n                        </tbody>\n                    </table>\n                </div>\n            </div> \n        </div>\n\n    </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { UserInfo } from '../../../_models/user';\r\n\r\nimport { AuthenticationService } from '../../../_services/authentication.service';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n    pushRightClass: string = 'push-right';\r\n\r\n    currentUser: UserInfo;\r\n\r\n    constructor(private translate: TranslateService, public router: Router,private authenticationService: AuthenticationService) {\r\n\r\n        this.translate.addLangs(['en', 'fr', 'ur', 'es', 'it', 'fa', 'de', 'zh-CHS']);\r\n        this.translate.setDefaultLang('en');\r\n        const browserLang = this.translate.getBrowserLang();\r\n        this.translate.use(browserLang.match(/en|fr|ur|es|it|fa|de|zh-CHS/) ? browserLang : 'en');\r\n\r\n        this.router.events.subscribe(val => {\r\n            if (\r\n                val instanceof NavigationEnd &&\r\n                window.innerWidth <= 992 &&\r\n                this.isToggled()\r\n            ) {\r\n                this.toggleSidebar();\r\n            }\r\n        });\r\n\r\n         this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    ngOnInit() { }\r\n\r\n    isToggled(): boolean {\r\n        const dom: Element = document.querySelector('body');\r\n        return dom.classList.contains(this.pushRightClass);\r\n    }\r\n\r\n    toggleSidebar() {\r\n        const dom: any = document.querySelector('body');\r\n        dom.classList.toggle(this.pushRightClass);\r\n    }\r\n\r\n    rltAndLtr() {\r\n        const dom: any = document.querySelector('body');\r\n        dom.classList.toggle('rtl');\r\n    }\r\n\r\n    onLoggedout() {\r\n       localStorage.removeItem('isLoggedin');\r\n   }\r\n\r\n    logoutApp(): void {\r\n        console.log(\"Logout\");\r\n        this.authenticationService.logout();\r\n  }\r\n\r\n    changeLang(language: string) {\r\n        this.translate.use(language);\r\n    }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg fixed-top\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\" >SB Admin Angular5 BS4 </a>\n    <button class=\"navbar-toggler\" type=\"button\" (click)=\"toggleSidebar()\">\n        <!-- <span class=\"navbar-toggler-icon\"></span> -->\n        <i class=\"fa fa-bars text-muted\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"collapse navbar-collapse\">\n        <form class=\"form-inline my-2 my-lg-0\">\n            <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"{{ 'Search' | translate }}\" >\n        </form>\n        <ul class=\"navbar-nav \">\n            <li class=\"nav-item\">\n                <a href=\"javascript:void(0)\" class=\"nav-link mt-1\"\n                    style=\"padding: 0.375rem 1rem !important; border-color: #999;\"\n                    (click)=\"rltAndLtr()\"\n                >\n                    RTL/LTR\n                </a>\n            </li> &nbsp;\n            <li class=\"nav-item dropdown\" ngbDropdown>\n                <a class=\"nav-link\" href=\"javascript:void(0)\" ngbDropdownToggle>\n                    <i class=\"fa fa-envelope\"></i> <b class=\"caret\"></b><span class=\"sr-only\">(current)</span>\n                </a>\n                <ul class=\"dropdown-menu-right messages\" ngbDropdownMenu>\n                    <li class=\"media\">\n                        <img class=\"d-flex align-self-center mr-3\"\n                            src=\"http://i.huffpost.com/gadgets/slideshows/461162/slide_461162_6224974_sq50.jpg\" alt=\"Generic placeholder image\"\n                        >\n                        <div class=\"media-body\">\n                            <h5 class=\"mt-0 mb-1\">John Smith</h5>\n                            <p class=\"small text-muted\"><i class=\"fa fa-clock-o\"></i> Yesterday at 4:32 PM</p>\n                            <p class=\"last\"> Lorem ipsum dolor sit amet, consectetur...</p>\n                        </div>\n                    </li>\n                    <li class=\"media\">\n                        <img class=\"d-flex align-self-center mr-3\"\n                            src=\"http://i.huffpost.com/gadgets/slideshows/461162/slide_461162_6224974_sq50.jpg\"\n                            alt=\"Generic placeholder image\"\n                        >\n                        <div class=\"media-body\">\n                            <h5 class=\"mt-0 mb-1\">John Smith</h5>\n                            <p class=\"small text-muted\"><i class=\"fa fa-clock-o\"></i> Yesterday at 4:32 PM</p>\n                            <p class=\"last\"> Lorem ipsum dolor sit amet, consectetur...</p>\n                        </div>\n                    </li>\n                    <li class=\"media\">\n                        <img class=\"d-flex align-self-center mr-3\"\n                            src=\"http://i.huffpost.com/gadgets/slideshows/461162/slide_461162_6224974_sq50.jpg\"\n                            alt=\"Generic placeholder image\"\n                        />\n                        <div class=\"media-body\">\n                            <h5 class=\"mt-0 mb-1\">John Smith</h5>\n                            <p class=\"small text-muted\"><i class=\"fa fa-clock-o\"></i> Yesterday at 4:32 PM</p>\n                            <p class=\"last\"> Lorem ipsum dolor sit amet, consectetur...</p>\n                        </div>\n                    </li>\n                </ul>\n            </li>\n            <li class=\"nav-item dropdown\" ngbDropdown>\n                <a href=\"javascript:void(0)\" class=\"nav-link\" ngbDropdownToggle>\n                    <i class=\"fa fa-bell\"></i> <b class=\"caret\"></b><span class=\"sr-only\">(current)</span>\n                </a>\n                <div class=\"dropdown-menu-right\" ngbDropdownMenu>\n                    <a href=\"javascript:void(0)\" class=\"dropdown-item\">\n                        {{ 'Pending Task' | translate }} <span class=\"badge badge-info\">6</span>\n                    </a>\n                    <a href=\"javascript:void(0)\" class=\"dropdown-item\">\n                        {{ 'In queue' | translate }} <span class=\"badge badge-info\"> 13</span>\n                    </a>\n                    <a href=\"javascript:void(0)\" class=\"dropdown-item\">\n                        {{ 'Mail' | translate }} <span class=\"badge badge-info\"> 45</span>\n                    </a>\n                    <li class=\"dropdown-divider\"></li>\n                    <a href=\"javascript:void(0)\" class=\"dropdown-item\">\n                        {{ 'View All' | translate }}\n                    </a>\n                </div>\n            </li>\n            <li class=\"nav-item dropdown\" ngbDropdown>\n                <a href=\"javascript:void(0)\" class=\"nav-link\" ngbDropdownToggle>\n                    <i class=\"fa fa-language\"></i> {{ 'Language' | translate }} <b class=\"caret\"></b>\n                </a>\n                <div class=\"dropdown-menu-right\" ngbDropdownMenu>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"changeLang('en')\">\n                        {{ 'English' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"changeLang('fr')\">\n                        {{ 'French' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"changeLang('ur')\">\n                        {{ 'Urdu' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"changeLang('es')\">\n                        {{ 'Spanish' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"changeLang('it')\">\n                        {{ 'Italian' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"changeLang('fa')\">\n                        {{ 'Farsi' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"changeLang('de')\">\n                        {{ 'German' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"changeLang('zh-CHS')\">\n                        {{ 'Simplified Chinese' | translate }}\n                    </a>\n                </div>\n            </li>\n            <li class=\"nav-item dropdown\" ngbDropdown>\n                <a href=\"javascript:void(0)\" class=\"nav-link\" ngbDropdownToggle>\n                    <i class=\"fa fa-user\"></i> {{currentUser.user.username}}!<b class=\"caret\"></b>\n                </a>\n                <div class=\"dropdown-menu-right\" ngbDropdownMenu>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n                        <i class=\"fa fa-fw fa-user\"></i> {{ 'Profile' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n                        <i class=\"fa fa-fw fa-envelope\"></i> {{ 'Inbox' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\">\n                        <i class=\"fa fa-fw fa-gear\"></i> {{ 'Settings' | translate }}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"logoutApp()\">\n                        <i class=\"fa fa-fw fa-power-off\"></i> {{ 'Log Out' | translate }}\n                    </a>\n                    <!-- <a class=\"dropdown-item\" [routerLink]=\"['/login']\" (click)=\"onLoggedout()\">\n                        <i class=\"fa fa-fw fa-power-off\"></i> {{ 'Log Out' | translate }}\n                    </a> -->\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>\n","import { Component, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'app-sidebar',\r\n    templateUrl: './sidebar.component.html',\r\n    styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent {\r\n    isActive: boolean = false;\r\n    collapsed: boolean = false;\r\n    showMenu: string = '';\r\n    pushRightClass: string = 'push-right';\r\n\r\n    @Output() collapsedEvent = new EventEmitter<boolean>();\r\n    \r\n    constructor(private translate: TranslateService, public router: Router) {\r\n        this.translate.addLangs(['en', 'fr', 'ur', 'es', 'it', 'fa', 'de']);\r\n        this.translate.setDefaultLang('en');\r\n        const browserLang = this.translate.getBrowserLang();\r\n        this.translate.use(browserLang.match(/en|fr|ur|es|it|fa|de/) ? browserLang : 'en');\r\n\r\n        this.router.events.subscribe(val => {\r\n            if (\r\n                val instanceof NavigationEnd &&\r\n                window.innerWidth <= 992 &&\r\n                this.isToggled()\r\n            ) {\r\n                this.toggleSidebar();\r\n            }\r\n        });\r\n    }\r\n\r\n    eventCalled() {\r\n        this.isActive = !this.isActive;\r\n    }\r\n\r\n    addExpandClass(element: any) {\r\n        if (element === this.showMenu) {\r\n            this.showMenu = '0';\r\n        } else {\r\n            this.showMenu = element;\r\n        }\r\n    }\r\n\r\n    toggleCollapsed() {\r\n        this.collapsed = !this.collapsed;\r\n        this.collapsedEvent.emit(this.collapsed);\r\n    }\r\n\r\n    isToggled(): boolean {\r\n        const dom: Element = document.querySelector('body');\r\n        return dom.classList.contains(this.pushRightClass);\r\n    }\r\n\r\n    toggleSidebar() {\r\n        const dom: any = document.querySelector('body');\r\n        dom.classList.toggle(this.pushRightClass);\r\n    }\r\n\r\n    rltAndLtr() {\r\n        const dom: any = document.querySelector('body');\r\n        dom.classList.toggle('rtl');\r\n    }\r\n\r\n    changeLang(language: string) {\r\n        this.translate.use(language);\r\n    }\r\n\r\n    onLoggedout() {\r\n        localStorage.removeItem('isLoggedin');\r\n        localStorage.removeItem('currentUser');\r\n        this.router.navigate([\"/logon\"]);\r\n    }\r\n}\r\n","<nav class=\"sidebar\" [ngClass]=\"{sidebarPushRight: isActive, collapsed: collapsed}\">\r\n    <div class=\"list-group\">\r\n        <a routerLink=\"/portal/dashboard\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-dashboard\"></i>&nbsp;\r\n            <span>{{ 'Dashboard' | translate }}</span>\r\n        </a>\r\n        <a  [routerLink]=\"['/portal/languages']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-users\"></i>&nbsp;\r\n            <span>{{ 'Languages Management' | translate }}</span>\r\n        </a>\r\n        <a  [routerLink]=\"['/portal/roles']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-users\"></i>&nbsp;\r\n            <span>{{ 'Roles Management' | translate }}</span>\r\n        </a>\r\n        <a  [routerLink]=\"['/portal/list-users']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-users\"></i>&nbsp;\r\n            <span>{{ 'Users List' | translate }}</span>\r\n        </a>\r\n        <a  [routerLink]=\"['/portal/chat']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-envelope\"></i>&nbsp;\r\n            <span>{{ 'Messages' | translate }}</span> \r\n        </a>\r\n        <a  [routerLink]=\"['/portal/viewchat']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-th-list\"></i>&nbsp;\r\n            <span>{{ 'Live chat' | translate }}</span>\r\n        </a>\r\n        <a  [routerLink]=\"['/portal/settings']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-th-list\"></i>&nbsp;\r\n            <span>{{ 'Settings' | translate }}</span>\r\n        </a>\r\n        <a  [routerLink]=\"['/portal/categories-services']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-th-list\"></i>&nbsp;\r\n            <span>{{ 'Categories' | translate }}</span>\r\n        </a>\r\n        <a  [routerLink]=\"['/portal/subcategories']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-th-list\"></i>&nbsp;\r\n            <span>{{ 'Sous Categories' | translate }}</span>\r\n        </a>\r\n        <a  [routerLink]=\"['/portal/services']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-th-list\"></i>&nbsp;\r\n            <span>{{ 'Services' | translate }}</span> \r\n        </a>\r\n        <a  [routerLink]=\"['/portal/about']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-th-list\"></i>&nbsp;\r\n            <span>{{ 'About' | translate }}</span> \r\n        </a>\r\n        <!-- <a [routerLink]=\"['/charts']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-bar-chart-o\"></i>&nbsp;\r\n            <span>{{ 'Charts' | translate }}</span>\r\n        </a>\r\n        <a [routerLink]=\"['/tables']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-table\"></i>&nbsp;\r\n            <span>{{ 'Tables' | translate }}</span>\r\n        </a>\r\n        <a [routerLink]=\"['/forms']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-edit\"></i>&nbsp;\r\n            <span>{{ 'Forms' | translate }}</span>\r\n        </a>\r\n        <a [routerLink]=\"['/bs-element']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-desktop\"></i>&nbsp;\r\n            <span>{{ 'Bootstrap Element' | translate }}</span>\r\n        </a>\r\n        <a [routerLink]=\"['/grid']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-fw fa-wrench\"></i>&nbsp;\r\n            <span>{{ 'Bootstrap Grid' | translate }}</span>\r\n        </a>\r\n        <a [routerLink]=\"['/components']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-th-list\"></i>&nbsp;\r\n            <span>{{ 'Component' | translate }}</span>\r\n        </a> -->\r\n        <div class=\"nested-menu\">\r\n            <a class=\"list-group-item\" (click)=\"addExpandClass('pages')\">\r\n                <i class=\"fa fa-plus\"></i>&nbsp;\r\n                <span>{{ 'Menu' | translate }}</span>\r\n            </a>\r\n            <li class=\"nested\" [class.expand]=\"showMenu === 'pages'\">\r\n                <ul class=\"submenu\">\r\n                    <li>\r\n                        <a href=\"javascript:void(0)\">\r\n                            <i class=\"fa fa-monument\"></i>&nbsp;\r\n                            <span>{{ 'Submenu' | translate }}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"javascript:void(0)\">\r\n                            <i class=\"fa fa-monument\"></i>&nbsp;\r\n                            <span>{{ 'Submenu' | translate }}</span>\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a href=\"javascript:void(0)\">\r\n                            <i class=\"fa fa-monument\"></i>&nbsp;\r\n                            <span>{{ 'Submenu' | translate }}</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n        </div>\r\n        <a [routerLink]=\"['/portal/blank-page']\" [routerLinkActive]=\"['router-link-active']\" class=\"list-group-item\">\r\n            <i class=\"fa fa-file-o\"></i>&nbsp;\r\n            <span>{{ 'Blank Page' | translate }}</span>\r\n        </a>\r\n        <div class=\"header-fields\">\r\n            <a (click)=\"rltAndLtr()\" class=\"list-group-item\">\r\n                <span><i class=\"fa fa-arrows-h\"></i>&nbsp; RTL/LTR</span>\r\n            </a>\r\n            <div class=\"nested-menu\">\r\n                <a class=\"list-group-item\" (click)=\"addExpandClass('languages')\">\r\n                    <span><i class=\"fa fa-language\"></i>&nbsp; {{ 'Language' | translate }} <b class=\"caret\"></b></span>\r\n                </a>\r\n                <li class=\"nested\" [class.expand]=\"showMenu === 'languages'\">\r\n                    <ul class=\"submenu\">\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\" (click)=\"changeLang('en')\">\r\n                                {{ 'English' | translate }}\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\" (click)=\"changeLang('fr')\">\r\n                                {{ 'French' | translate }}\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\" (click)=\"changeLang('ur')\">\r\n                                {{ 'Urdu' | translate }}\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\" (click)=\"changeLang('es')\">\r\n                                {{ 'Spanish' | translate }}\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\" (click)=\"changeLang('it')\">\r\n                                {{ 'Italian' | translate }}\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\" (click)=\"changeLang('fa')\">\r\n                                {{ 'Farsi' | translate }}\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\" (click)=\"changeLang('de')\">\r\n                                {{ 'German' | translate }}\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </div>\r\n            <div class=\"nested-menu\">\r\n                <a class=\"list-group-item\" (click)=\"addExpandClass('profile')\">\r\n                    <span><i class=\"fa fa-user\"></i>&nbsp; John Smith</span>\r\n                </a>\r\n                <li class=\"nested\" [class.expand]=\"showMenu === 'profile'\">\r\n                    <ul class=\"submenu\">\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\">\r\n                                <span><i class=\"fa fa-fw fa-user\"></i> {{ 'Profile' | translate }}</span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\">\r\n                                <span><i class=\"fa fa-fw fa-envelope\"></i> {{ 'Inbox' | translate }}</span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a href=\"javascript:void(0)\">\r\n                                <span><i class=\"fa fa-fw fa-gear\"></i> {{ 'Settings' | translate }}</span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a (click)=\"onLoggedout()\">\r\n                                <span><i class=\"fa fa-fw fa-power-off\"></i> {{ 'Log Out' | translate }}</span>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"toggle-button\" [ngClass]=\"{collapsed: collapsed}\" (click)=\"toggleCollapsed()\">\r\n        <i class=\"fa fa-fw fa-angle-double-left\"></i>&nbsp;\r\n        <span>{{ 'Collapse Sidebar' | translate }}</span>\r\n    </div>\r\n</nav>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { AboutComponent } from './about/about.component';\r\n\r\nconst routes: Routes = [\r\n    {   \r\n\r\n        path: '',\r\n        component: LayoutComponent,\r\n        children: [\r\n            { path: '', redirectTo: 'dashboard', pathMatch: 'prefix' },\r\n            { path: 'dashboard', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) },\r\n            { path: 'charts', loadChildren: () => import('./charts/charts.module').then(m => m.ChartsModule) },\r\n            { path: 'tables', loadChildren: () => import('./tables/tables.module').then(m => m.TablesModule) },\r\n            { path: 'forms', loadChildren: () => import('./form/form.module').then(m => m.FormModule) },\r\n            { path: 'grid', loadChildren: () => import('./grid/grid.module').then(m => m.GridModule) },\r\n            { path: 'bs-element', loadChildren: () => import('./bs-element/bs-element.module').then(m => m.BsElementModule) },\r\n            { path: 'grid', loadChildren: () => import('./grid/grid.module').then(m => m.GridModule) },\r\n            { path: 'blank-page', loadChildren: () => import('./blank-page/blank-page.module').then(m => m.BlankPageModule) },\r\n            { path: 'components', loadChildren: () => import('./bs-component/bs-component.module').then(m => m.BsComponentModule) },\r\n            { path: 'list-users', loadChildren: () => import('./list-users/list-users.module').then(m => m.ListUserModule) },\r\n            { path: 'settings', loadChildren: () => import('./settings/settings.module').then(m => m.SettingsModule) },\r\n            { path: 'categories-services', loadChildren: () => import('./categorieservice/categorieservice.module').then(m => m.CategorieserviceModule) },\r\n            { path: 'subcategories', loadChildren: () => import('./subcategories/subcategories.module').then(m => m.SubcategoriesModule) },\r\n            { path: 'services', loadChildren: () => import('./services/services.module').then(m => m.ServicesModule) },\r\n            { path: 'languages', loadChildren: () => import('./langue/langue.module').then(m => m.LangueModule) },\r\n            { path: 'viewchat', loadChildren: () => import('./view-chat/view-chat.module').then(m => m.ViewChatModule) },\r\n            { path: 'roles', loadChildren: () => import('./role/role.module').then(m => m.RoleModule) },\r\n            { path: 'chat', loadChildren: () => import('./help-notes/help-notes.module').then(m => m.HelpNotesModule) },\r\n            { path: 'about', component: AboutComponent },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LayoutRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-layout',\r\n    templateUrl: './layout.component.html',\r\n    styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n    \r\n    collapedSideBar: boolean;\r\n\r\n    constructor() {}\r\n\r\n    ngOnInit() {}\r\n\r\n    receiveCollapsed($event) {\r\n        this.collapedSideBar = $event;\r\n    }\r\n}\r\n","<app-header></app-header>\r\n<app-sidebar (collapsedEvent)=\"receiveCollapsed($event)\"></app-sidebar>\r\n<section class=\"main-container\" [ngClass]=\"{collapsed: collapedSideBar}\">\r\n    <router-outlet></router-outlet>\r\n</section>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { LayoutRoutingModule } from './layout-routing.module';\r\nimport { LayoutComponent } from './layout.component';\r\n\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AboutComponent } from './about/about.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        LayoutRoutingModule,\r\n        TranslateModule,\r\n        NgbDropdownModule,\r\n        TranslateModule.forRoot()\r\n    ],\r\n    declarations: [LayoutComponent, SidebarComponent, HeaderComponent, AboutComponent]\r\n})\r\nexport class LayoutModule {}\r\n"],"sourceRoot":"webpack:///"}