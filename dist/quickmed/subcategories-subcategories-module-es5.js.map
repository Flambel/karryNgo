{"version":3,"sources":["webpack:///src/app/layout/subcategories/managesubcategories.component.ts","webpack:///src/app/layout/subcategories/managesubcategories.component.html","webpack:///src/app/layout/subcategories/subcategories-routing.module.ts","webpack:///src/app/layout/subcategories/subcategories.component.ts","webpack:///src/app/layout/subcategories/subcategories.component.html","webpack:///src/app/layout/subcategories/subcategories.module.ts"],"names":["ManagesubcategoriesComponent","formBuilder","router","alertService","SetSubCat","empformlabel","empformbtn","submitted","btnvisibility","routeReuseStrategy","shouldReuseRoute","getAll","pipe","subscribe","serv_cats","categories","addForm","group","_id","souscategoryName","required","categoryServiceId","description","data_id","localStorage","getItem","console","log","getByIdSubCat","dataget","patchValue","data","invalid","saveSubCat","value","success","message","error","navigate","updateSubCat","controls","onCancel","selector","templateUrl","styleUrls","animations","routes","path","component","children","SubcategoriesRoutingModule","forChild","imports","exports","SubcategoriesComponent","SetServiceSubCat","route","subcateg","loadAllSubCategories","getAllSubCateg","sub_cats","logo_category","categ","services_categ","idCategory","TabCat","verified","i","VarName","length","String","categoryName","removeItem","dataValue","setItem","toString","id","deleteSubCat","SubcategoriesModule","declarations"],"mappings":"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","file":"subcategories-subcategories-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";  \r\nimport { Router } from \"@angular/router\";  \r\n\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { ServiceCatService } from './../../_services/services-categories.service';\r\n\r\n@Component({\r\n  selector: 'app-managesubcategories',\r\n  templateUrl: './managesubcategories.component.html',\r\n  styleUrls: ['./managesubcategories.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\n\r\nexport class ManagesubcategoriesComponent implements OnInit {\r\n\r\n  empformlabel: string = 'Add Sub Category';  \r\n  empformbtn: string = 'Save';  \r\n  submitted = false;\r\n  categories: any;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private alertService: AlertService,private SetSubCat: ServiceCatService) { \r\n\r\n   // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      }; \r\n  }\r\n\r\n  addForm: FormGroup;  \r\n  btnvisibility: boolean = true;  \r\n\r\n  ngOnInit() {\r\n\r\n   this.SetSubCat.getAll().pipe(first()).subscribe(serv_cats => { \r\n            this.categories = serv_cats;\r\n        });\r\n\r\n  \tthis.addForm = this.formBuilder.group({   \r\n      _id: [''],   \r\n      souscategoryName: ['', Validators.required],       \r\n      categoryServiceId: ['', Validators.required],       \r\n      description: ['', Validators.required]      \r\n    });   \r\n\r\n    let data_id = localStorage.getItem('editDataSubCat');\r\n    console.log('test : '+data_id) \r\n\r\n    if (data_id) {  \r\n     \r\n     this.SetSubCat.getByIdSubCat(data_id).pipe(first()).subscribe( (dataget : any)  => {  \r\n          //this.addForm.patchValue(dataget.data); \r\n\r\n          this.addForm.patchValue({\r\n          _id: dataget.data._id,\r\n          souscategoryName: dataget.data.souscategoryName,\r\n          categoryServiceId: dataget.data.categoryServiceId,\r\n          description: dataget.data.description\r\n          }); \r\n     \r\n        });\r\n\r\n      this.btnvisibility = false;  \r\n      this.empformlabel = 'Edit Sub Category';  \r\n      this.empformbtn = 'Update';  \r\n    } \r\n      \r\n\r\n  }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.addForm.controls; }\r\n\r\n    onSubmit() { \r\n\r\n       this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        }\r\n\r\n    this.SetSubCat.saveSubCat(this.addForm.value)  \r\n      .subscribe(\r\n       //on success \r\n       (data : any) => { \r\n            this.alertService.success(data.message, true);\r\n       },\r\n       //on error\r\n       error => {\r\n            this.alertService.error(error);\r\n       },\r\n        //on complete\r\n       () => { \r\n            this.router.navigate(['/portal/subcategories']);  \r\n       });\r\n\r\n    }\r\n\r\n    onUpdate() { \r\n\r\n    this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        } \r\n\r\n      this.SetSubCat.updateSubCat(this.addForm.value).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n              this.router.navigate(['/portal/subcategories']); \r\n           }); \r\n\r\n  } \r\n\r\n    onCancel() { this.router.navigate(['/portal/subcategories']); } \r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <app-page-header [heading]=\"'Services Categories'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                \t <h2 class=\"text-center\">{{empformlabel}}</h2>  \r\n           \t\t\t\t<alert></alert>\r\n                </div>\r\n\r\n  <div class=\"col-md-10\">  \r\n      <form [formGroup]=\"addForm\" novalidate class=\"form\">\r\n\r\n    <input  name=\"id\" type=\"hidden\" formControlName=\"_id\" >  \r\n\r\n    <div class=\"row\">\r\n\r\n         <div class=\"form-group col-md-6\">  \r\n            <label for=\"subcat_name\">Sub Category Name</label>  \r\n            <input formControlName=\"souscategoryName\" placeholder=\"Sub Category Name\" class=\"form-control\" id=\"subcat_name\" [ngClass]=\"{ 'is-invalid': submitted && f.souscategoryName.errors }\">  \r\n            <div *ngIf=\"submitted && f.souscategoryName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.souscategoryName.errors.required\">Sub Category Name is required</div>\r\n            </div>\r\n         </div>  \r\n\r\n         <div class=\"form-group col-md-6\">  \r\n            <label for=\"categoryServiceId\">Choose Your Category</label>  \r\n              <select class=\"form-control\" *ngIf=\"categories && categories.data\" formControlName=\"categoryServiceId\" id=\"categoryServiceId\" required=\"required\" >\r\n                <option value=\"\"></option>\r\n                <option *ngFor=\"let val of categories.data\" [value]=\"val._id\">{{val.categoryName}}</option>\r\n              </select> \r\n            <div *ngIf=\"submitted && f.categoryServiceId.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.categoryServiceId.errors.required\">Category is required</div>\r\n            </div>\r\n         </div> \r\n\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n         <div class=\"form-group col-md-10\">  \r\n            <label for=\"description\">Description</label>\r\n            <textarea formControlName=\"description\" placeholder=\"Enter Your Description\" class=\"form-control\" id=\"description\" [ngClass]=\"{ 'is-invalid': submitted && f.description.errors }\" ></textarea>    \r\n            <div *ngIf=\"submitted && f.description.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.description.errors.required\">Description is required</div>\r\n            </div>\r\n         </div> \r\n    </div>\r\n     \r\n\r\n<div class=\"row\">\r\n    <div class=\"form-group col-md-12 text-center\">\r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"btnvisibility\" (click)=\"onSubmit()\">Save</button>   \r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"!btnvisibility\" (click)=\"onUpdate()\">Update</button> \r\n        <button class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button> \r\n    </div>\r\n</div>\r\n      \r\n        <!-- <p>Form value: {{ addForm.value | json }}</p>   -->\r\n\r\n      </form>  \r\n    </div>  \r\n   \r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n    \r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SubcategoriesComponent } from './subcategories.component';\r\nimport { ManagesubcategoriesComponent } from './managesubcategories.component';\r\n\r\nconst routes: Routes = [\r\n\r\n\t{\r\n\t    path: '',component: SubcategoriesComponent,children:  \r\n\t\t[\r\n\t\t\t{path: 'manage-subcategories', component: ManagesubcategoriesComponent}\r\n\t\t]\r\n\t} \r\n\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SubcategoriesRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\n\r\nimport { ServiceCat } from './../../_models/service-categories';\r\n\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { ServiceCatService } from './../../_services/services-categories.service';\r\n\r\n@Component({\r\n  selector: 'app-subcategories',\r\n  templateUrl: './subcategories.component.html',\r\n  styleUrls: ['./subcategories.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class SubcategoriesComponent implements OnInit {\r\n\r\n  subcateg: ServiceCat[] = [];\r\n  services_categ: any;\r\n  \r\n  constructor( private SetServiceSubCat: ServiceCatService,\r\n               private alertService: AlertService,\r\n               public route: ActivatedRoute,\r\n               private router: Router  ) {\r\n\r\n        // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      };\r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n  \t\t\tthis.loadAllSubCategories();\r\n  }\r\n\r\n\tprivate loadAllSubCategories() {\r\n\t    this.SetServiceSubCat.getAllSubCateg().pipe(first()).subscribe((sub_cats: any) => { \r\n          this.subcateg = sub_cats.data;\r\n          console.log(sub_cats.data[0].logo_category);\r\n\t    });\r\n\r\n\t     this.SetServiceSubCat.getAll().pipe(first()).subscribe(categ => { \r\n            this.services_categ = categ; \r\n        });\r\n\r\n\t}\r\n\r\n\tgetCategoryName(idCategory:string,TabCat:any): string {\r\n\r\n      let verified:boolean = false, i=0; let VarName=\"\";\r\n      if (idCategory && TabCat) {\r\n         while (!verified && i < TabCat.length ) {\r\n\r\n        if ( String(TabCat[i]._id) == idCategory){\r\n            VarName=TabCat[i].categoryName;\r\n            verified=true;\r\n          }\r\n\r\n          i++;\r\n        }\r\n\r\n      } \r\n\r\n   return VarName;\r\n    }\r\n\r\n\tadd(): void { \r\n      localStorage.removeItem('editDataSubCat'); \r\n      this.router.navigate(['/portal/subcategories/manage-subcategories']);  \r\n    }\r\n\r\n    edit(dataValue: ServiceCat): void {  \r\n        \r\n\t     localStorage.removeItem('editDataSubCat');  \r\n\t     localStorage.setItem('editDataSubCat',dataValue.toString()); \r\n\t     this.router.navigate(['/portal/subcategories/manage-subcategories']);  \r\n\r\n    } \r\n\r\n    delete(id: number) {\r\n        \r\n        this.SetServiceSubCat.deleteSubCat(id).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n                this.loadAllSubCategories(); \r\n           });\r\n    }\r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <router-outlet></router-outlet>\r\n <div *ngIf=\"route.children.length === 0\">\r\n    <app-page-header [heading]=\"'Sub Categories'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                    <alert></alert>\r\n                    Sub Categories : {{subcateg?.length}}\r\n                    <button style=\"text-align: right\" (click)=\"add()\" class=\"btn btn-success\"> Add</button>                 \r\n                </div>\r\n                <div class=\"card-body table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>SubCategoryName</th>\r\n                            <th>Category</th>\r\n                            <th>Description</th>\r\n                            <th>Created On </th>\r\n                            <th>Updated On </th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let val of subcateg;let rank = index\">\r\n                            <td scope=\"row\">{{rank+1}}</td>\r\n                            <td style=\"color: red;font-weight: bold\">{{val.souscategoryName}}</td>\r\n                            <td style=\"color: red;font-weight: bold\"><span *ngIf=\"services_categ\"> {{ getCategoryName(val.categoryServiceId,services_categ.data) }}</span></td>\r\n                            <td style=\"color: red;font-weight: bold\">{{val.description}}</td>\r\n                            <td style=\"color: blue;font-weight: bold\">{{val.create_date | date}}</td>\r\n                            <td style=\"color: blue;font-weight: bold\">{{val.update_date | date}}</td>\r\n                            <!-- <img [src]=\"val.logo_category | safe: 'resourceUrl'\" class=\"rounded mb-3 img-fluid\" style=\"max-width: 200px;height: 200px;width: 200px;cursor: pointer;\"> -->\r\n                            <td> <button (click)=\"edit(val._id)\" style=\"margin-right: 20px;\" class=\"btn btn-info\"> Edit</button>  <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(val._id)\"  >Delete</button></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule,FormsModule  }    from '@angular/forms';\r\nimport { SubcategoriesRoutingModule } from './subcategories-routing.module';\r\nimport { SubcategoriesComponent } from './subcategories.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { AlertModule } from './../../_directives/alert.module';\r\nimport { ManagesubcategoriesComponent } from './managesubcategories.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SubcategoriesRoutingModule,\r\n    PageHeaderModule,AlertModule,\r\n    ReactiveFormsModule,FormsModule\r\n  ],\r\n  declarations: [SubcategoriesComponent, ManagesubcategoriesComponent]\r\n})\r\nexport class SubcategoriesModule { }\r\n"]}