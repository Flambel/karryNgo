{"version":3,"sources":["webpack:///src/app/layout/role/manageroles.component.ts","webpack:///src/app/layout/role/manageroles.component.html","webpack:///src/app/layout/role/role-routing.module.ts","webpack:///src/app/layout/role/role.component.ts","webpack:///src/app/layout/role/role.component.html","webpack:///src/app/layout/role/role.module.ts"],"names":["ManagerolesComponent","formBuilder","router","alertService","SetServiceRole","empformlabel","empformbtn","submitted","btnvisibility","routeReuseStrategy","shouldReuseRoute","addForm","group","_id","title","required","slug","data_id","localStorage","getItem","getById","pipe","subscribe","dataget","patchValue","data","invalid","save","value","success","message","error","navigate","update","controls","onCancel","selector","templateUrl","styleUrls","animations","routes","path","component","children","RoleRoutingModule","forChild","imports","exports","RoleComponent","route","role_data","loadAllRoles","getAll","roles","removeItem","dataValue","setItem","toString","id","RoleModule","declarations"],"mappings":"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","file":"role-role-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";  \r\nimport { Router } from \"@angular/router\";  \r\n\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\n\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { RoleService } from './../../_services/role.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-role',\r\n  templateUrl: './manageroles.component.html',\r\n  styleUrls: ['./manageroles.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\n\r\nexport class ManagerolesComponent implements OnInit {\r\n\r\n  empformlabel: string = 'Add Role';  \r\n  empformbtn: string = 'Save';  \r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private alertService: AlertService,private SetServiceRole: RoleService) { \r\n\r\n   // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      }; \r\n  }\r\n\r\n  addForm: FormGroup;  \r\n  btnvisibility: boolean = true;  \r\n\r\n  ngOnInit() {\r\n\r\n  \tthis.addForm = this.formBuilder.group({   \r\n      _id: [''],   \r\n      title: ['', Validators.required],       \r\n      slug: ['', Validators.required]       \r\n    });   \r\n\r\n    let data_id = localStorage.getItem('editDataRole');\r\n\r\n    if (data_id) {  \r\n     \r\n     this.SetServiceRole.getById(data_id).pipe(first()).subscribe( (dataget : any)  => {  \r\n          this.addForm.patchValue({\r\n          _id: dataget.data._id,title: dataget.data.title,slug: dataget.data.slug\r\n          }); \r\n     \r\n        });\r\n\r\n      this.btnvisibility = false;  \r\n      this.empformlabel = 'Edit Role';  \r\n      this.empformbtn = 'Update';  \r\n    } \r\n      \r\n\r\n  }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.addForm.controls; }\r\n\r\n    onSubmit() { \r\n\r\n       this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        }\r\n\r\n    this.SetServiceRole.save(this.addForm.value)  \r\n      .subscribe(\r\n       //on success \r\n       (data : any) => { \r\n            this.alertService.success(data.message, true);\r\n       },\r\n       //on error\r\n       error => {\r\n            this.alertService.error(error);\r\n       },\r\n        //on complete\r\n       () => { \r\n            this.router.navigate(['roles']);  \r\n       });\r\n\r\n    }\r\n\r\n    onUpdate() { \r\n\r\n    this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.addForm.invalid) {\r\n            return;\r\n        } \r\n\r\n      this.SetServiceRole.update(this.addForm.value).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n              this.router.navigate(['/roles']); \r\n           }); \r\n\r\n  } \r\n\r\n    onCancel() { this.router.navigate(['roles']); } \r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <app-page-header [heading]=\"'Roles Management'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                \t <h2 class=\"text-center\">{{empformlabel}}</h2>  \r\n           \t\t\t\t<alert></alert>\r\n                </div>\r\n\r\n                <div class=\"col-md-10\">  \r\n      <form [formGroup]=\"addForm\" novalidate class=\"form\">\r\n\r\n    <input  name=\"id\" type=\"hidden\" formControlName=\"_id\" >  \r\n\r\n<div class=\"row\">\r\n\t\r\n     <div class=\"form-group col-md-6\">  \r\n        <label for=\"title-data\">Title</label>  \r\n        <input formControlName=\"title\" placeholder=\"Role Title\" class=\"form-control\" id=\"title-data\" [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">  \r\n        <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.title.errors.required\">Role Title is required</div>\r\n        </div>\r\n     </div> \r\n\r\n     <div class=\"form-group col-md-6\">  \r\n\t      <label for=\"slug-data\">Slug</label>  \r\n\t      <input formControlName=\"slug\" placeholder=\"Role Slug\" class=\"form-control\" id=\"slug-data\" [ngClass]=\"{ 'is-invalid': submitted && f.slug.errors }\">  \r\n\t      <div *ngIf=\"submitted && f.slug.errors\" class=\"invalid-feedback\">\r\n\t        <div *ngIf=\"f.slug.errors.required\">Role Slug is required</div>\r\n\t      </div>\r\n     </div> \r\n\r\n</div>\r\n     \r\n\r\n<div class=\"row\">\r\n    <div class=\"form-group col-md-12 text-center\">\r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"btnvisibility\" (click)=\"onSubmit()\">Save</button>   \r\n        <button class=\"btn btn-success mr-4\"  *ngIf=\"!btnvisibility\" (click)=\"onUpdate()\">Update</button> \r\n        <button class=\"btn btn-danger\" (click)=\"onCancel()\">Cancel</button> \r\n    </div>\r\n</div>\r\n      \r\n        <!-- <p>Form value: {{ addForm.value | json }}</p>   -->\r\n\r\n      </form>  \r\n    </div>  \r\n   \r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n    \r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RoleComponent } from './role.component';\r\nimport { ManagerolesComponent } from './manageroles.component';\r\n\r\nconst routes: Routes = [\r\n\r\n\t{\r\n\t    path: '',component: RoleComponent,children:  \r\n\t\t[\r\n\t\t\t{path: 'manage-roles', component: ManagerolesComponent}\r\n\t\t]\r\n\t} \r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoleRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { routerTransition } from '../../router.animations';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { RoleInfo } from './../../_models/role';\r\nimport { AlertService } from './../../_services/alert.service';\r\nimport { RoleService } from './../../_services/role.service';\r\n\r\n@Component({\r\n  selector: 'app-role',\r\n  templateUrl: './role.component.html',\r\n  styleUrls: ['./role.component.scss'],\r\n  animations: [routerTransition()]\r\n})\r\nexport class RoleComponent implements OnInit {\r\n\r\n  role_data: RoleInfo[] = [];\r\n\r\n  constructor(private SetServiceRole: RoleService,private alertService: AlertService,public route: ActivatedRoute,\r\n        private router: Router) {\r\n\r\n        // override the route reuse strategy\r\n      this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n          return false;\r\n      };\r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n  \t\t\tthis.loadAllRoles();\r\n  }\r\n\r\n  private loadAllRoles() {\r\n        this.SetServiceRole.getAll().pipe(first()).subscribe((roles: any) => { \r\n            this.role_data = roles.data; \r\n        });\r\n\r\n    }\r\n\r\n    add(): void { \r\n      localStorage.removeItem('editDataRole'); \r\n      this.router.navigate(['/portal/roles/manage-roles']);  \r\n   }\r\n\r\n    edit(dataValue: RoleInfo): void {      \r\n      localStorage.removeItem('editDataRole');  \r\n      localStorage.setItem('editDataRole',dataValue.toString()); \r\n      this.router.navigate(['/portal/roles/manage-roles']);  \r\n\r\n   } \r\n\r\n    delete(id: number) {\r\n        this.SetServiceRole.delete(id).pipe(first()).subscribe(\r\n\r\n           //on success \r\n           (data : any) => { \r\n                this.alertService.success(data.message, true);\r\n           },\r\n\r\n           //on error\r\n           error => {\r\n                this.alertService.error(error);\r\n           },\r\n\r\n            //on complete\r\n           () => { \r\n                this.loadAllRoles() \r\n           });\r\n    }\r\n\r\n}\r\n","<div [@routerTransition]>\r\n    <router-outlet></router-outlet>\r\n <div *ngIf=\"route.children.length === 0\">\r\n    <app-page-header [heading]=\"'Roles'\" [icon]=\"'fa-settings'\"></app-page-header>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <div class=\"card mb-3\">\r\n                <div class=\"card-header\">\r\n                    <alert></alert>\r\n                    Roles : <b>Total \"{{role_data?.length}}\"</b>\r\n                    <button style=\"text-align: right\" (click)=\"add()\" class=\"btn btn-success\"> Add</button>                 \r\n                </div>\r\n                <div class=\"card-body table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead> \r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Title</th>\r\n                            <th>Slug</th>\r\n                            <th>Created On </th>\r\n                            <th>Modified On </th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr *ngFor=\"let val of role_data;let rank = index\">\r\n                            <td scope=\"row\">{{rank+1}}</td>\r\n                            <td style=\"color: green;font-weight: bold\">{{val.title}}</td>\r\n                            <td style=\"color: green;font-weight: bold\">{{val.slug}}</td>\r\n                            <td style=\"color: green;font-weight: bold\">{{val.create_date | date}}</td>\r\n                            <td style=\"color: green;font-weight: bold\">{{val.update_date | date}}</td>\r\n                            <td> <button (click)=\"edit(val._id)\" style=\"margin-right: 20px;\" class=\"btn btn-info\"> Edit</button>  <button type=\"button\" class=\"btn btn-danger\" (click)=\"delete(val._id)\"  >Delete</button></td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div> \r\n        </div>\r\n\r\n    </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule,FormsModule  }    from '@angular/forms';\r\nimport { RoleRoutingModule } from './role-routing.module';\r\nimport { RoleComponent } from './role.component';\r\nimport { ManagerolesComponent } from './manageroles.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { AlertModule } from './../../_directives/alert.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RoleRoutingModule,\r\n    PageHeaderModule,AlertModule,\r\n    ReactiveFormsModule,FormsModule\r\n  ],\r\n  declarations: [RoleComponent,ManagerolesComponent]\r\n})\r\nexport class RoleModule { }\r\n"]}